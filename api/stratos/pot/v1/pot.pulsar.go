// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package potv1

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	_ "cosmossdk.io/api/cosmos_proto"
	_ "cosmossdk.io/api/gogoproto"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Params_4_list)(nil)

type _Params_4_list struct {
	list *[]*MiningRewardParam
}

func (x *_Params_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Params_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Params_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MiningRewardParam)
	(*x.list)[i] = concreteValue
}

func (x *_Params_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MiningRewardParam)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Params_4_list) AppendMutable() protoreflect.Value {
	v := new(MiningRewardParam)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Params_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Params_4_list) NewElement() protoreflect.Value {
	v := new(MiningRewardParam)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Params_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Params                      protoreflect.MessageDescriptor
	fd_Params_bond_denom           protoreflect.FieldDescriptor
	fd_Params_reward_denom         protoreflect.FieldDescriptor
	fd_Params_mature_epoch         protoreflect.FieldDescriptor
	fd_Params_mining_reward_params protoreflect.FieldDescriptor
	fd_Params_community_tax        protoreflect.FieldDescriptor
	fd_Params_initial_total_supply protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_Params = File_stratos_pot_v1_pot_proto.Messages().ByName("Params")
	fd_Params_bond_denom = md_Params.Fields().ByName("bond_denom")
	fd_Params_reward_denom = md_Params.Fields().ByName("reward_denom")
	fd_Params_mature_epoch = md_Params.Fields().ByName("mature_epoch")
	fd_Params_mining_reward_params = md_Params.Fields().ByName("mining_reward_params")
	fd_Params_community_tax = md_Params.Fields().ByName("community_tax")
	fd_Params_initial_total_supply = md_Params.Fields().ByName("initial_total_supply")
}

var _ protoreflect.Message = (*fastReflection_Params)(nil)

type fastReflection_Params Params

func (x *Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Params)(x)
}

func (x *Params) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Params_messageType fastReflection_Params_messageType
var _ protoreflect.MessageType = fastReflection_Params_messageType{}

type fastReflection_Params_messageType struct{}

func (x fastReflection_Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Params)(nil)
}
func (x fastReflection_Params_messageType) New() protoreflect.Message {
	return new(fastReflection_Params)
}
func (x fastReflection_Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Params) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Params) Type() protoreflect.MessageType {
	return _fastReflection_Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Params) New() protoreflect.Message {
	return new(fastReflection_Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Params) Interface() protoreflect.ProtoMessage {
	return (*Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BondDenom != "" {
		value := protoreflect.ValueOfString(x.BondDenom)
		if !f(fd_Params_bond_denom, value) {
			return
		}
	}
	if x.RewardDenom != "" {
		value := protoreflect.ValueOfString(x.RewardDenom)
		if !f(fd_Params_reward_denom, value) {
			return
		}
	}
	if x.MatureEpoch != int64(0) {
		value := protoreflect.ValueOfInt64(x.MatureEpoch)
		if !f(fd_Params_mature_epoch, value) {
			return
		}
	}
	if len(x.MiningRewardParams) != 0 {
		value := protoreflect.ValueOfList(&_Params_4_list{list: &x.MiningRewardParams})
		if !f(fd_Params_mining_reward_params, value) {
			return
		}
	}
	if x.CommunityTax != "" {
		value := protoreflect.ValueOfString(x.CommunityTax)
		if !f(fd_Params_community_tax, value) {
			return
		}
	}
	if x.InitialTotalSupply != nil {
		value := protoreflect.ValueOfMessage(x.InitialTotalSupply.ProtoReflect())
		if !f(fd_Params_initial_total_supply, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.Params.bond_denom":
		return x.BondDenom != ""
	case "stratos.pot.v1.Params.reward_denom":
		return x.RewardDenom != ""
	case "stratos.pot.v1.Params.mature_epoch":
		return x.MatureEpoch != int64(0)
	case "stratos.pot.v1.Params.mining_reward_params":
		return len(x.MiningRewardParams) != 0
	case "stratos.pot.v1.Params.community_tax":
		return x.CommunityTax != ""
	case "stratos.pot.v1.Params.initial_total_supply":
		return x.InitialTotalSupply != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Params"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.Params.bond_denom":
		x.BondDenom = ""
	case "stratos.pot.v1.Params.reward_denom":
		x.RewardDenom = ""
	case "stratos.pot.v1.Params.mature_epoch":
		x.MatureEpoch = int64(0)
	case "stratos.pot.v1.Params.mining_reward_params":
		x.MiningRewardParams = nil
	case "stratos.pot.v1.Params.community_tax":
		x.CommunityTax = ""
	case "stratos.pot.v1.Params.initial_total_supply":
		x.InitialTotalSupply = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Params"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.Params.bond_denom":
		value := x.BondDenom
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Params.reward_denom":
		value := x.RewardDenom
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Params.mature_epoch":
		value := x.MatureEpoch
		return protoreflect.ValueOfInt64(value)
	case "stratos.pot.v1.Params.mining_reward_params":
		if len(x.MiningRewardParams) == 0 {
			return protoreflect.ValueOfList(&_Params_4_list{})
		}
		listValue := &_Params_4_list{list: &x.MiningRewardParams}
		return protoreflect.ValueOfList(listValue)
	case "stratos.pot.v1.Params.community_tax":
		value := x.CommunityTax
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Params.initial_total_supply":
		value := x.InitialTotalSupply
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Params"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.Params.bond_denom":
		x.BondDenom = value.Interface().(string)
	case "stratos.pot.v1.Params.reward_denom":
		x.RewardDenom = value.Interface().(string)
	case "stratos.pot.v1.Params.mature_epoch":
		x.MatureEpoch = value.Int()
	case "stratos.pot.v1.Params.mining_reward_params":
		lv := value.List()
		clv := lv.(*_Params_4_list)
		x.MiningRewardParams = *clv.list
	case "stratos.pot.v1.Params.community_tax":
		x.CommunityTax = value.Interface().(string)
	case "stratos.pot.v1.Params.initial_total_supply":
		x.InitialTotalSupply = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Params"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.Params.mining_reward_params":
		if x.MiningRewardParams == nil {
			x.MiningRewardParams = []*MiningRewardParam{}
		}
		value := &_Params_4_list{list: &x.MiningRewardParams}
		return protoreflect.ValueOfList(value)
	case "stratos.pot.v1.Params.initial_total_supply":
		if x.InitialTotalSupply == nil {
			x.InitialTotalSupply = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.InitialTotalSupply.ProtoReflect())
	case "stratos.pot.v1.Params.bond_denom":
		panic(fmt.Errorf("field bond_denom of message stratos.pot.v1.Params is not mutable"))
	case "stratos.pot.v1.Params.reward_denom":
		panic(fmt.Errorf("field reward_denom of message stratos.pot.v1.Params is not mutable"))
	case "stratos.pot.v1.Params.mature_epoch":
		panic(fmt.Errorf("field mature_epoch of message stratos.pot.v1.Params is not mutable"))
	case "stratos.pot.v1.Params.community_tax":
		panic(fmt.Errorf("field community_tax of message stratos.pot.v1.Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Params"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.Params.bond_denom":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Params.reward_denom":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Params.mature_epoch":
		return protoreflect.ValueOfInt64(int64(0))
	case "stratos.pot.v1.Params.mining_reward_params":
		list := []*MiningRewardParam{}
		return protoreflect.ValueOfList(&_Params_4_list{list: &list})
	case "stratos.pot.v1.Params.community_tax":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Params.initial_total_supply":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Params"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.BondDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MatureEpoch != 0 {
			n += 1 + runtime.Sov(uint64(x.MatureEpoch))
		}
		if len(x.MiningRewardParams) > 0 {
			for _, e := range x.MiningRewardParams {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.CommunityTax)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InitialTotalSupply != nil {
			l = options.Size(x.InitialTotalSupply)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.InitialTotalSupply != nil {
			encoded, err := options.Marshal(x.InitialTotalSupply)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.CommunityTax) > 0 {
			i -= len(x.CommunityTax)
			copy(dAtA[i:], x.CommunityTax)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CommunityTax)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.MiningRewardParams) > 0 {
			for iNdEx := len(x.MiningRewardParams) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.MiningRewardParams[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.MatureEpoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MatureEpoch))
			i--
			dAtA[i] = 0x18
		}
		if len(x.RewardDenom) > 0 {
			i -= len(x.RewardDenom)
			copy(dAtA[i:], x.RewardDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardDenom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.BondDenom) > 0 {
			i -= len(x.BondDenom)
			copy(dAtA[i:], x.BondDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BondDenom)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BondDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BondDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MatureEpoch", wireType)
				}
				x.MatureEpoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MatureEpoch |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MiningRewardParams", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MiningRewardParams = append(x.MiningRewardParams, &MiningRewardParam{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MiningRewardParams[len(x.MiningRewardParams)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CommunityTax", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CommunityTax = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InitialTotalSupply", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.InitialTotalSupply == nil {
					x.InitialTotalSupply = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InitialTotalSupply); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MiningRewardParam                                protoreflect.MessageDescriptor
	fd_MiningRewardParam_total_mined_valve_start        protoreflect.FieldDescriptor
	fd_MiningRewardParam_total_mined_valve_end          protoreflect.FieldDescriptor
	fd_MiningRewardParam_mining_reward                  protoreflect.FieldDescriptor
	fd_MiningRewardParam_block_chain_percentage_in_bp   protoreflect.FieldDescriptor
	fd_MiningRewardParam_resource_node_percentage_in_bp protoreflect.FieldDescriptor
	fd_MiningRewardParam_meta_node_percentage_in_bp     protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_MiningRewardParam = File_stratos_pot_v1_pot_proto.Messages().ByName("MiningRewardParam")
	fd_MiningRewardParam_total_mined_valve_start = md_MiningRewardParam.Fields().ByName("total_mined_valve_start")
	fd_MiningRewardParam_total_mined_valve_end = md_MiningRewardParam.Fields().ByName("total_mined_valve_end")
	fd_MiningRewardParam_mining_reward = md_MiningRewardParam.Fields().ByName("mining_reward")
	fd_MiningRewardParam_block_chain_percentage_in_bp = md_MiningRewardParam.Fields().ByName("block_chain_percentage_in_bp")
	fd_MiningRewardParam_resource_node_percentage_in_bp = md_MiningRewardParam.Fields().ByName("resource_node_percentage_in_bp")
	fd_MiningRewardParam_meta_node_percentage_in_bp = md_MiningRewardParam.Fields().ByName("meta_node_percentage_in_bp")
}

var _ protoreflect.Message = (*fastReflection_MiningRewardParam)(nil)

type fastReflection_MiningRewardParam MiningRewardParam

func (x *MiningRewardParam) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MiningRewardParam)(x)
}

func (x *MiningRewardParam) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MiningRewardParam_messageType fastReflection_MiningRewardParam_messageType
var _ protoreflect.MessageType = fastReflection_MiningRewardParam_messageType{}

type fastReflection_MiningRewardParam_messageType struct{}

func (x fastReflection_MiningRewardParam_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MiningRewardParam)(nil)
}
func (x fastReflection_MiningRewardParam_messageType) New() protoreflect.Message {
	return new(fastReflection_MiningRewardParam)
}
func (x fastReflection_MiningRewardParam_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MiningRewardParam
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MiningRewardParam) Descriptor() protoreflect.MessageDescriptor {
	return md_MiningRewardParam
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MiningRewardParam) Type() protoreflect.MessageType {
	return _fastReflection_MiningRewardParam_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MiningRewardParam) New() protoreflect.Message {
	return new(fastReflection_MiningRewardParam)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MiningRewardParam) Interface() protoreflect.ProtoMessage {
	return (*MiningRewardParam)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MiningRewardParam) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalMinedValveStart != nil {
		value := protoreflect.ValueOfMessage(x.TotalMinedValveStart.ProtoReflect())
		if !f(fd_MiningRewardParam_total_mined_valve_start, value) {
			return
		}
	}
	if x.TotalMinedValveEnd != nil {
		value := protoreflect.ValueOfMessage(x.TotalMinedValveEnd.ProtoReflect())
		if !f(fd_MiningRewardParam_total_mined_valve_end, value) {
			return
		}
	}
	if x.MiningReward != nil {
		value := protoreflect.ValueOfMessage(x.MiningReward.ProtoReflect())
		if !f(fd_MiningRewardParam_mining_reward, value) {
			return
		}
	}
	if x.BlockChainPercentageInBp != "" {
		value := protoreflect.ValueOfString(x.BlockChainPercentageInBp)
		if !f(fd_MiningRewardParam_block_chain_percentage_in_bp, value) {
			return
		}
	}
	if x.ResourceNodePercentageInBp != "" {
		value := protoreflect.ValueOfString(x.ResourceNodePercentageInBp)
		if !f(fd_MiningRewardParam_resource_node_percentage_in_bp, value) {
			return
		}
	}
	if x.MetaNodePercentageInBp != "" {
		value := protoreflect.ValueOfString(x.MetaNodePercentageInBp)
		if !f(fd_MiningRewardParam_meta_node_percentage_in_bp, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MiningRewardParam) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_start":
		return x.TotalMinedValveStart != nil
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_end":
		return x.TotalMinedValveEnd != nil
	case "stratos.pot.v1.MiningRewardParam.mining_reward":
		return x.MiningReward != nil
	case "stratos.pot.v1.MiningRewardParam.block_chain_percentage_in_bp":
		return x.BlockChainPercentageInBp != ""
	case "stratos.pot.v1.MiningRewardParam.resource_node_percentage_in_bp":
		return x.ResourceNodePercentageInBp != ""
	case "stratos.pot.v1.MiningRewardParam.meta_node_percentage_in_bp":
		return x.MetaNodePercentageInBp != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.MiningRewardParam"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.MiningRewardParam does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MiningRewardParam) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_start":
		x.TotalMinedValveStart = nil
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_end":
		x.TotalMinedValveEnd = nil
	case "stratos.pot.v1.MiningRewardParam.mining_reward":
		x.MiningReward = nil
	case "stratos.pot.v1.MiningRewardParam.block_chain_percentage_in_bp":
		x.BlockChainPercentageInBp = ""
	case "stratos.pot.v1.MiningRewardParam.resource_node_percentage_in_bp":
		x.ResourceNodePercentageInBp = ""
	case "stratos.pot.v1.MiningRewardParam.meta_node_percentage_in_bp":
		x.MetaNodePercentageInBp = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.MiningRewardParam"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.MiningRewardParam does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MiningRewardParam) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_start":
		value := x.TotalMinedValveStart
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_end":
		value := x.TotalMinedValveEnd
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.mining_reward":
		value := x.MiningReward
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.block_chain_percentage_in_bp":
		value := x.BlockChainPercentageInBp
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.MiningRewardParam.resource_node_percentage_in_bp":
		value := x.ResourceNodePercentageInBp
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.MiningRewardParam.meta_node_percentage_in_bp":
		value := x.MetaNodePercentageInBp
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.MiningRewardParam"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.MiningRewardParam does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MiningRewardParam) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_start":
		x.TotalMinedValveStart = value.Message().Interface().(*v1beta1.Coin)
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_end":
		x.TotalMinedValveEnd = value.Message().Interface().(*v1beta1.Coin)
	case "stratos.pot.v1.MiningRewardParam.mining_reward":
		x.MiningReward = value.Message().Interface().(*v1beta1.Coin)
	case "stratos.pot.v1.MiningRewardParam.block_chain_percentage_in_bp":
		x.BlockChainPercentageInBp = value.Interface().(string)
	case "stratos.pot.v1.MiningRewardParam.resource_node_percentage_in_bp":
		x.ResourceNodePercentageInBp = value.Interface().(string)
	case "stratos.pot.v1.MiningRewardParam.meta_node_percentage_in_bp":
		x.MetaNodePercentageInBp = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.MiningRewardParam"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.MiningRewardParam does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MiningRewardParam) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_start":
		if x.TotalMinedValveStart == nil {
			x.TotalMinedValveStart = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.TotalMinedValveStart.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_end":
		if x.TotalMinedValveEnd == nil {
			x.TotalMinedValveEnd = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.TotalMinedValveEnd.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.mining_reward":
		if x.MiningReward == nil {
			x.MiningReward = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.MiningReward.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.block_chain_percentage_in_bp":
		panic(fmt.Errorf("field block_chain_percentage_in_bp of message stratos.pot.v1.MiningRewardParam is not mutable"))
	case "stratos.pot.v1.MiningRewardParam.resource_node_percentage_in_bp":
		panic(fmt.Errorf("field resource_node_percentage_in_bp of message stratos.pot.v1.MiningRewardParam is not mutable"))
	case "stratos.pot.v1.MiningRewardParam.meta_node_percentage_in_bp":
		panic(fmt.Errorf("field meta_node_percentage_in_bp of message stratos.pot.v1.MiningRewardParam is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.MiningRewardParam"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.MiningRewardParam does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MiningRewardParam) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_start":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.total_mined_valve_end":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.mining_reward":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "stratos.pot.v1.MiningRewardParam.block_chain_percentage_in_bp":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.MiningRewardParam.resource_node_percentage_in_bp":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.MiningRewardParam.meta_node_percentage_in_bp":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.MiningRewardParam"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.MiningRewardParam does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MiningRewardParam) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.MiningRewardParam", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MiningRewardParam) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MiningRewardParam) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MiningRewardParam) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MiningRewardParam) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MiningRewardParam)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TotalMinedValveStart != nil {
			l = options.Size(x.TotalMinedValveStart)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TotalMinedValveEnd != nil {
			l = options.Size(x.TotalMinedValveEnd)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MiningReward != nil {
			l = options.Size(x.MiningReward)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlockChainPercentageInBp)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ResourceNodePercentageInBp)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MetaNodePercentageInBp)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MiningRewardParam)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MetaNodePercentageInBp) > 0 {
			i -= len(x.MetaNodePercentageInBp)
			copy(dAtA[i:], x.MetaNodePercentageInBp)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MetaNodePercentageInBp)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ResourceNodePercentageInBp) > 0 {
			i -= len(x.ResourceNodePercentageInBp)
			copy(dAtA[i:], x.ResourceNodePercentageInBp)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ResourceNodePercentageInBp)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.BlockChainPercentageInBp) > 0 {
			i -= len(x.BlockChainPercentageInBp)
			copy(dAtA[i:], x.BlockChainPercentageInBp)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockChainPercentageInBp)))
			i--
			dAtA[i] = 0x22
		}
		if x.MiningReward != nil {
			encoded, err := options.Marshal(x.MiningReward)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TotalMinedValveEnd != nil {
			encoded, err := options.Marshal(x.TotalMinedValveEnd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TotalMinedValveStart != nil {
			encoded, err := options.Marshal(x.TotalMinedValveStart)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MiningRewardParam)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MiningRewardParam: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MiningRewardParam: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalMinedValveStart", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TotalMinedValveStart == nil {
					x.TotalMinedValveStart = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalMinedValveStart); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalMinedValveEnd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TotalMinedValveEnd == nil {
					x.TotalMinedValveEnd = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalMinedValveEnd); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MiningReward", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MiningReward == nil {
					x.MiningReward = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MiningReward); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockChainPercentageInBp", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockChainPercentageInBp = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ResourceNodePercentageInBp", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ResourceNodePercentageInBp = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetaNodePercentageInBp", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MetaNodePercentageInBp = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_Reward_2_list)(nil)

type _Reward_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_Reward_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Reward_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Reward_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_Reward_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Reward_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Reward_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Reward_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Reward_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Reward_3_list)(nil)

type _Reward_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_Reward_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Reward_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Reward_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_Reward_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Reward_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Reward_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Reward_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Reward_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Reward                          protoreflect.MessageDescriptor
	fd_Reward_wallet_address           protoreflect.FieldDescriptor
	fd_Reward_reward_from_mining_pool  protoreflect.FieldDescriptor
	fd_Reward_reward_from_traffic_pool protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_Reward = File_stratos_pot_v1_pot_proto.Messages().ByName("Reward")
	fd_Reward_wallet_address = md_Reward.Fields().ByName("wallet_address")
	fd_Reward_reward_from_mining_pool = md_Reward.Fields().ByName("reward_from_mining_pool")
	fd_Reward_reward_from_traffic_pool = md_Reward.Fields().ByName("reward_from_traffic_pool")
}

var _ protoreflect.Message = (*fastReflection_Reward)(nil)

type fastReflection_Reward Reward

func (x *Reward) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Reward)(x)
}

func (x *Reward) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Reward_messageType fastReflection_Reward_messageType
var _ protoreflect.MessageType = fastReflection_Reward_messageType{}

type fastReflection_Reward_messageType struct{}

func (x fastReflection_Reward_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Reward)(nil)
}
func (x fastReflection_Reward_messageType) New() protoreflect.Message {
	return new(fastReflection_Reward)
}
func (x fastReflection_Reward_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Reward
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Reward) Descriptor() protoreflect.MessageDescriptor {
	return md_Reward
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Reward) Type() protoreflect.MessageType {
	return _fastReflection_Reward_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Reward) New() protoreflect.Message {
	return new(fastReflection_Reward)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Reward) Interface() protoreflect.ProtoMessage {
	return (*Reward)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Reward) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.WalletAddress != "" {
		value := protoreflect.ValueOfString(x.WalletAddress)
		if !f(fd_Reward_wallet_address, value) {
			return
		}
	}
	if len(x.RewardFromMiningPool) != 0 {
		value := protoreflect.ValueOfList(&_Reward_2_list{list: &x.RewardFromMiningPool})
		if !f(fd_Reward_reward_from_mining_pool, value) {
			return
		}
	}
	if len(x.RewardFromTrafficPool) != 0 {
		value := protoreflect.ValueOfList(&_Reward_3_list{list: &x.RewardFromTrafficPool})
		if !f(fd_Reward_reward_from_traffic_pool, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Reward) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.Reward.wallet_address":
		return x.WalletAddress != ""
	case "stratos.pot.v1.Reward.reward_from_mining_pool":
		return len(x.RewardFromMiningPool) != 0
	case "stratos.pot.v1.Reward.reward_from_traffic_pool":
		return len(x.RewardFromTrafficPool) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Reward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Reward does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.Reward.wallet_address":
		x.WalletAddress = ""
	case "stratos.pot.v1.Reward.reward_from_mining_pool":
		x.RewardFromMiningPool = nil
	case "stratos.pot.v1.Reward.reward_from_traffic_pool":
		x.RewardFromTrafficPool = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Reward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Reward does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Reward) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.Reward.wallet_address":
		value := x.WalletAddress
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Reward.reward_from_mining_pool":
		if len(x.RewardFromMiningPool) == 0 {
			return protoreflect.ValueOfList(&_Reward_2_list{})
		}
		listValue := &_Reward_2_list{list: &x.RewardFromMiningPool}
		return protoreflect.ValueOfList(listValue)
	case "stratos.pot.v1.Reward.reward_from_traffic_pool":
		if len(x.RewardFromTrafficPool) == 0 {
			return protoreflect.ValueOfList(&_Reward_3_list{})
		}
		listValue := &_Reward_3_list{list: &x.RewardFromTrafficPool}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Reward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Reward does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.Reward.wallet_address":
		x.WalletAddress = value.Interface().(string)
	case "stratos.pot.v1.Reward.reward_from_mining_pool":
		lv := value.List()
		clv := lv.(*_Reward_2_list)
		x.RewardFromMiningPool = *clv.list
	case "stratos.pot.v1.Reward.reward_from_traffic_pool":
		lv := value.List()
		clv := lv.(*_Reward_3_list)
		x.RewardFromTrafficPool = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Reward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Reward does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.Reward.reward_from_mining_pool":
		if x.RewardFromMiningPool == nil {
			x.RewardFromMiningPool = []*v1beta1.Coin{}
		}
		value := &_Reward_2_list{list: &x.RewardFromMiningPool}
		return protoreflect.ValueOfList(value)
	case "stratos.pot.v1.Reward.reward_from_traffic_pool":
		if x.RewardFromTrafficPool == nil {
			x.RewardFromTrafficPool = []*v1beta1.Coin{}
		}
		value := &_Reward_3_list{list: &x.RewardFromTrafficPool}
		return protoreflect.ValueOfList(value)
	case "stratos.pot.v1.Reward.wallet_address":
		panic(fmt.Errorf("field wallet_address of message stratos.pot.v1.Reward is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Reward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Reward does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Reward) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.Reward.wallet_address":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Reward.reward_from_mining_pool":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_Reward_2_list{list: &list})
	case "stratos.pot.v1.Reward.reward_from_traffic_pool":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_Reward_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Reward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Reward does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Reward) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.Reward", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Reward) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Reward) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Reward) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.WalletAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.RewardFromMiningPool) > 0 {
			for _, e := range x.RewardFromMiningPool {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.RewardFromTrafficPool) > 0 {
			for _, e := range x.RewardFromTrafficPool {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RewardFromTrafficPool) > 0 {
			for iNdEx := len(x.RewardFromTrafficPool) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RewardFromTrafficPool[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.RewardFromMiningPool) > 0 {
			for iNdEx := len(x.RewardFromMiningPool) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RewardFromMiningPool[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.WalletAddress) > 0 {
			i -= len(x.WalletAddress)
			copy(dAtA[i:], x.WalletAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WalletAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Reward: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Reward: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardFromMiningPool", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardFromMiningPool = append(x.RewardFromMiningPool, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RewardFromMiningPool[len(x.RewardFromMiningPool)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardFromTrafficPool", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardFromTrafficPool = append(x.RewardFromTrafficPool, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RewardFromTrafficPool[len(x.RewardFromTrafficPool)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SingleWalletVolume                protoreflect.MessageDescriptor
	fd_SingleWalletVolume_wallet_address protoreflect.FieldDescriptor
	fd_SingleWalletVolume_volume         protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_SingleWalletVolume = File_stratos_pot_v1_pot_proto.Messages().ByName("SingleWalletVolume")
	fd_SingleWalletVolume_wallet_address = md_SingleWalletVolume.Fields().ByName("wallet_address")
	fd_SingleWalletVolume_volume = md_SingleWalletVolume.Fields().ByName("volume")
}

var _ protoreflect.Message = (*fastReflection_SingleWalletVolume)(nil)

type fastReflection_SingleWalletVolume SingleWalletVolume

func (x *SingleWalletVolume) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SingleWalletVolume)(x)
}

func (x *SingleWalletVolume) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SingleWalletVolume_messageType fastReflection_SingleWalletVolume_messageType
var _ protoreflect.MessageType = fastReflection_SingleWalletVolume_messageType{}

type fastReflection_SingleWalletVolume_messageType struct{}

func (x fastReflection_SingleWalletVolume_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SingleWalletVolume)(nil)
}
func (x fastReflection_SingleWalletVolume_messageType) New() protoreflect.Message {
	return new(fastReflection_SingleWalletVolume)
}
func (x fastReflection_SingleWalletVolume_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SingleWalletVolume
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SingleWalletVolume) Descriptor() protoreflect.MessageDescriptor {
	return md_SingleWalletVolume
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SingleWalletVolume) Type() protoreflect.MessageType {
	return _fastReflection_SingleWalletVolume_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SingleWalletVolume) New() protoreflect.Message {
	return new(fastReflection_SingleWalletVolume)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SingleWalletVolume) Interface() protoreflect.ProtoMessage {
	return (*SingleWalletVolume)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SingleWalletVolume) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.WalletAddress != "" {
		value := protoreflect.ValueOfString(x.WalletAddress)
		if !f(fd_SingleWalletVolume_wallet_address, value) {
			return
		}
	}
	if x.Volume != "" {
		value := protoreflect.ValueOfString(x.Volume)
		if !f(fd_SingleWalletVolume_volume, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SingleWalletVolume) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.SingleWalletVolume.wallet_address":
		return x.WalletAddress != ""
	case "stratos.pot.v1.SingleWalletVolume.volume":
		return x.Volume != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.SingleWalletVolume"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.SingleWalletVolume does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SingleWalletVolume) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.SingleWalletVolume.wallet_address":
		x.WalletAddress = ""
	case "stratos.pot.v1.SingleWalletVolume.volume":
		x.Volume = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.SingleWalletVolume"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.SingleWalletVolume does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SingleWalletVolume) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.SingleWalletVolume.wallet_address":
		value := x.WalletAddress
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.SingleWalletVolume.volume":
		value := x.Volume
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.SingleWalletVolume"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.SingleWalletVolume does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SingleWalletVolume) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.SingleWalletVolume.wallet_address":
		x.WalletAddress = value.Interface().(string)
	case "stratos.pot.v1.SingleWalletVolume.volume":
		x.Volume = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.SingleWalletVolume"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.SingleWalletVolume does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SingleWalletVolume) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.SingleWalletVolume.wallet_address":
		panic(fmt.Errorf("field wallet_address of message stratos.pot.v1.SingleWalletVolume is not mutable"))
	case "stratos.pot.v1.SingleWalletVolume.volume":
		panic(fmt.Errorf("field volume of message stratos.pot.v1.SingleWalletVolume is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.SingleWalletVolume"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.SingleWalletVolume does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SingleWalletVolume) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.SingleWalletVolume.wallet_address":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.SingleWalletVolume.volume":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.SingleWalletVolume"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.SingleWalletVolume does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SingleWalletVolume) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.SingleWalletVolume", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SingleWalletVolume) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SingleWalletVolume) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SingleWalletVolume) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SingleWalletVolume) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SingleWalletVolume)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.WalletAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Volume)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SingleWalletVolume)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Volume) > 0 {
			i -= len(x.Volume)
			copy(dAtA[i:], x.Volume)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Volume)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.WalletAddress) > 0 {
			i -= len(x.WalletAddress)
			copy(dAtA[i:], x.WalletAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WalletAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SingleWalletVolume)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SingleWalletVolume: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SingleWalletVolume: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Volume", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Volume = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_WalletVolumes_1_list)(nil)

type _WalletVolumes_1_list struct {
	list *[]*SingleWalletVolume
}

func (x *_WalletVolumes_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_WalletVolumes_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_WalletVolumes_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SingleWalletVolume)
	(*x.list)[i] = concreteValue
}

func (x *_WalletVolumes_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SingleWalletVolume)
	*x.list = append(*x.list, concreteValue)
}

func (x *_WalletVolumes_1_list) AppendMutable() protoreflect.Value {
	v := new(SingleWalletVolume)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_WalletVolumes_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_WalletVolumes_1_list) NewElement() protoreflect.Value {
	v := new(SingleWalletVolume)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_WalletVolumes_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_WalletVolumes         protoreflect.MessageDescriptor
	fd_WalletVolumes_volumes protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_WalletVolumes = File_stratos_pot_v1_pot_proto.Messages().ByName("WalletVolumes")
	fd_WalletVolumes_volumes = md_WalletVolumes.Fields().ByName("volumes")
}

var _ protoreflect.Message = (*fastReflection_WalletVolumes)(nil)

type fastReflection_WalletVolumes WalletVolumes

func (x *WalletVolumes) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WalletVolumes)(x)
}

func (x *WalletVolumes) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WalletVolumes_messageType fastReflection_WalletVolumes_messageType
var _ protoreflect.MessageType = fastReflection_WalletVolumes_messageType{}

type fastReflection_WalletVolumes_messageType struct{}

func (x fastReflection_WalletVolumes_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WalletVolumes)(nil)
}
func (x fastReflection_WalletVolumes_messageType) New() protoreflect.Message {
	return new(fastReflection_WalletVolumes)
}
func (x fastReflection_WalletVolumes_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WalletVolumes
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WalletVolumes) Descriptor() protoreflect.MessageDescriptor {
	return md_WalletVolumes
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WalletVolumes) Type() protoreflect.MessageType {
	return _fastReflection_WalletVolumes_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WalletVolumes) New() protoreflect.Message {
	return new(fastReflection_WalletVolumes)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WalletVolumes) Interface() protoreflect.ProtoMessage {
	return (*WalletVolumes)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WalletVolumes) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Volumes) != 0 {
		value := protoreflect.ValueOfList(&_WalletVolumes_1_list{list: &x.Volumes})
		if !f(fd_WalletVolumes_volumes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WalletVolumes) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.WalletVolumes.volumes":
		return len(x.Volumes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.WalletVolumes"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.WalletVolumes does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WalletVolumes) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.WalletVolumes.volumes":
		x.Volumes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.WalletVolumes"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.WalletVolumes does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WalletVolumes) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.WalletVolumes.volumes":
		if len(x.Volumes) == 0 {
			return protoreflect.ValueOfList(&_WalletVolumes_1_list{})
		}
		listValue := &_WalletVolumes_1_list{list: &x.Volumes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.WalletVolumes"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.WalletVolumes does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WalletVolumes) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.WalletVolumes.volumes":
		lv := value.List()
		clv := lv.(*_WalletVolumes_1_list)
		x.Volumes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.WalletVolumes"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.WalletVolumes does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WalletVolumes) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.WalletVolumes.volumes":
		if x.Volumes == nil {
			x.Volumes = []*SingleWalletVolume{}
		}
		value := &_WalletVolumes_1_list{list: &x.Volumes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.WalletVolumes"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.WalletVolumes does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WalletVolumes) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.WalletVolumes.volumes":
		list := []*SingleWalletVolume{}
		return protoreflect.ValueOfList(&_WalletVolumes_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.WalletVolumes"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.WalletVolumes does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WalletVolumes) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.WalletVolumes", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WalletVolumes) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WalletVolumes) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WalletVolumes) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WalletVolumes) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WalletVolumes)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Volumes) > 0 {
			for _, e := range x.Volumes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WalletVolumes)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Volumes) > 0 {
			for iNdEx := len(x.Volumes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Volumes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WalletVolumes)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WalletVolumes: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WalletVolumes: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Volumes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Volumes = append(x.Volumes, &SingleWalletVolume{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Volumes[len(x.Volumes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VolumeReportRecord                  protoreflect.MessageDescriptor
	fd_VolumeReportRecord_reporter         protoreflect.FieldDescriptor
	fd_VolumeReportRecord_report_reference protoreflect.FieldDescriptor
	fd_VolumeReportRecord_tx_hash          protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_VolumeReportRecord = File_stratos_pot_v1_pot_proto.Messages().ByName("VolumeReportRecord")
	fd_VolumeReportRecord_reporter = md_VolumeReportRecord.Fields().ByName("reporter")
	fd_VolumeReportRecord_report_reference = md_VolumeReportRecord.Fields().ByName("report_reference")
	fd_VolumeReportRecord_tx_hash = md_VolumeReportRecord.Fields().ByName("tx_hash")
}

var _ protoreflect.Message = (*fastReflection_VolumeReportRecord)(nil)

type fastReflection_VolumeReportRecord VolumeReportRecord

func (x *VolumeReportRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VolumeReportRecord)(x)
}

func (x *VolumeReportRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VolumeReportRecord_messageType fastReflection_VolumeReportRecord_messageType
var _ protoreflect.MessageType = fastReflection_VolumeReportRecord_messageType{}

type fastReflection_VolumeReportRecord_messageType struct{}

func (x fastReflection_VolumeReportRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VolumeReportRecord)(nil)
}
func (x fastReflection_VolumeReportRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_VolumeReportRecord)
}
func (x fastReflection_VolumeReportRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VolumeReportRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VolumeReportRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_VolumeReportRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VolumeReportRecord) Type() protoreflect.MessageType {
	return _fastReflection_VolumeReportRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VolumeReportRecord) New() protoreflect.Message {
	return new(fastReflection_VolumeReportRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VolumeReportRecord) Interface() protoreflect.ProtoMessage {
	return (*VolumeReportRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VolumeReportRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Reporter != "" {
		value := protoreflect.ValueOfString(x.Reporter)
		if !f(fd_VolumeReportRecord_reporter, value) {
			return
		}
	}
	if x.ReportReference != "" {
		value := protoreflect.ValueOfString(x.ReportReference)
		if !f(fd_VolumeReportRecord_report_reference, value) {
			return
		}
	}
	if x.TxHash != "" {
		value := protoreflect.ValueOfString(x.TxHash)
		if !f(fd_VolumeReportRecord_tx_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VolumeReportRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.VolumeReportRecord.reporter":
		return x.Reporter != ""
	case "stratos.pot.v1.VolumeReportRecord.report_reference":
		return x.ReportReference != ""
	case "stratos.pot.v1.VolumeReportRecord.tx_hash":
		return x.TxHash != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.VolumeReportRecord"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.VolumeReportRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VolumeReportRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.VolumeReportRecord.reporter":
		x.Reporter = ""
	case "stratos.pot.v1.VolumeReportRecord.report_reference":
		x.ReportReference = ""
	case "stratos.pot.v1.VolumeReportRecord.tx_hash":
		x.TxHash = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.VolumeReportRecord"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.VolumeReportRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VolumeReportRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.VolumeReportRecord.reporter":
		value := x.Reporter
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.VolumeReportRecord.report_reference":
		value := x.ReportReference
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.VolumeReportRecord.tx_hash":
		value := x.TxHash
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.VolumeReportRecord"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.VolumeReportRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VolumeReportRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.VolumeReportRecord.reporter":
		x.Reporter = value.Interface().(string)
	case "stratos.pot.v1.VolumeReportRecord.report_reference":
		x.ReportReference = value.Interface().(string)
	case "stratos.pot.v1.VolumeReportRecord.tx_hash":
		x.TxHash = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.VolumeReportRecord"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.VolumeReportRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VolumeReportRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.VolumeReportRecord.reporter":
		panic(fmt.Errorf("field reporter of message stratos.pot.v1.VolumeReportRecord is not mutable"))
	case "stratos.pot.v1.VolumeReportRecord.report_reference":
		panic(fmt.Errorf("field report_reference of message stratos.pot.v1.VolumeReportRecord is not mutable"))
	case "stratos.pot.v1.VolumeReportRecord.tx_hash":
		panic(fmt.Errorf("field tx_hash of message stratos.pot.v1.VolumeReportRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.VolumeReportRecord"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.VolumeReportRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VolumeReportRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.VolumeReportRecord.reporter":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.VolumeReportRecord.report_reference":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.VolumeReportRecord.tx_hash":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.VolumeReportRecord"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.VolumeReportRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VolumeReportRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.VolumeReportRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VolumeReportRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VolumeReportRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VolumeReportRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VolumeReportRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VolumeReportRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Reporter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReportReference)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TxHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VolumeReportRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TxHash) > 0 {
			i -= len(x.TxHash)
			copy(dAtA[i:], x.TxHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxHash)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ReportReference) > 0 {
			i -= len(x.ReportReference)
			copy(dAtA[i:], x.ReportReference)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReportReference)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Reporter) > 0 {
			i -= len(x.Reporter)
			copy(dAtA[i:], x.Reporter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reporter)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VolumeReportRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VolumeReportRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VolumeReportRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reporter = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReportReference", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReportReference = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_TotalReward_1_list)(nil)

type _TotalReward_1_list struct {
	list *[]*v1beta1.Coin
}

func (x *_TotalReward_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TotalReward_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TotalReward_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_TotalReward_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TotalReward_1_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TotalReward_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TotalReward_1_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TotalReward_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_TotalReward_2_list)(nil)

type _TotalReward_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_TotalReward_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TotalReward_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TotalReward_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_TotalReward_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TotalReward_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TotalReward_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TotalReward_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TotalReward_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_TotalReward                protoreflect.MessageDescriptor
	fd_TotalReward_mining_reward  protoreflect.FieldDescriptor
	fd_TotalReward_traffic_reward protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_TotalReward = File_stratos_pot_v1_pot_proto.Messages().ByName("TotalReward")
	fd_TotalReward_mining_reward = md_TotalReward.Fields().ByName("mining_reward")
	fd_TotalReward_traffic_reward = md_TotalReward.Fields().ByName("traffic_reward")
}

var _ protoreflect.Message = (*fastReflection_TotalReward)(nil)

type fastReflection_TotalReward TotalReward

func (x *TotalReward) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TotalReward)(x)
}

func (x *TotalReward) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TotalReward_messageType fastReflection_TotalReward_messageType
var _ protoreflect.MessageType = fastReflection_TotalReward_messageType{}

type fastReflection_TotalReward_messageType struct{}

func (x fastReflection_TotalReward_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TotalReward)(nil)
}
func (x fastReflection_TotalReward_messageType) New() protoreflect.Message {
	return new(fastReflection_TotalReward)
}
func (x fastReflection_TotalReward_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TotalReward
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TotalReward) Descriptor() protoreflect.MessageDescriptor {
	return md_TotalReward
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TotalReward) Type() protoreflect.MessageType {
	return _fastReflection_TotalReward_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TotalReward) New() protoreflect.Message {
	return new(fastReflection_TotalReward)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TotalReward) Interface() protoreflect.ProtoMessage {
	return (*TotalReward)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TotalReward) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.MiningReward) != 0 {
		value := protoreflect.ValueOfList(&_TotalReward_1_list{list: &x.MiningReward})
		if !f(fd_TotalReward_mining_reward, value) {
			return
		}
	}
	if len(x.TrafficReward) != 0 {
		value := protoreflect.ValueOfList(&_TotalReward_2_list{list: &x.TrafficReward})
		if !f(fd_TotalReward_traffic_reward, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TotalReward) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.TotalReward.mining_reward":
		return len(x.MiningReward) != 0
	case "stratos.pot.v1.TotalReward.traffic_reward":
		return len(x.TrafficReward) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.TotalReward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.TotalReward does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalReward) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.TotalReward.mining_reward":
		x.MiningReward = nil
	case "stratos.pot.v1.TotalReward.traffic_reward":
		x.TrafficReward = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.TotalReward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.TotalReward does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TotalReward) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.TotalReward.mining_reward":
		if len(x.MiningReward) == 0 {
			return protoreflect.ValueOfList(&_TotalReward_1_list{})
		}
		listValue := &_TotalReward_1_list{list: &x.MiningReward}
		return protoreflect.ValueOfList(listValue)
	case "stratos.pot.v1.TotalReward.traffic_reward":
		if len(x.TrafficReward) == 0 {
			return protoreflect.ValueOfList(&_TotalReward_2_list{})
		}
		listValue := &_TotalReward_2_list{list: &x.TrafficReward}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.TotalReward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.TotalReward does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalReward) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.TotalReward.mining_reward":
		lv := value.List()
		clv := lv.(*_TotalReward_1_list)
		x.MiningReward = *clv.list
	case "stratos.pot.v1.TotalReward.traffic_reward":
		lv := value.List()
		clv := lv.(*_TotalReward_2_list)
		x.TrafficReward = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.TotalReward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.TotalReward does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalReward) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.TotalReward.mining_reward":
		if x.MiningReward == nil {
			x.MiningReward = []*v1beta1.Coin{}
		}
		value := &_TotalReward_1_list{list: &x.MiningReward}
		return protoreflect.ValueOfList(value)
	case "stratos.pot.v1.TotalReward.traffic_reward":
		if x.TrafficReward == nil {
			x.TrafficReward = []*v1beta1.Coin{}
		}
		value := &_TotalReward_2_list{list: &x.TrafficReward}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.TotalReward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.TotalReward does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TotalReward) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.TotalReward.mining_reward":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_TotalReward_1_list{list: &list})
	case "stratos.pot.v1.TotalReward.traffic_reward":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_TotalReward_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.TotalReward"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.TotalReward does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TotalReward) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.TotalReward", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TotalReward) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalReward) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TotalReward) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TotalReward) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TotalReward)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.MiningReward) > 0 {
			for _, e := range x.MiningReward {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TrafficReward) > 0 {
			for _, e := range x.TrafficReward {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TotalReward)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TrafficReward) > 0 {
			for iNdEx := len(x.TrafficReward) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TrafficReward[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.MiningReward) > 0 {
			for iNdEx := len(x.MiningReward) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.MiningReward[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TotalReward)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TotalReward: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TotalReward: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MiningReward", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MiningReward = append(x.MiningReward, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MiningReward[len(x.MiningReward)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrafficReward", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TrafficReward = append(x.TrafficReward, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrafficReward[len(x.TrafficReward)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Metrics                              protoreflect.MessageDescriptor
	fd_Metrics_total_supply                 protoreflect.FieldDescriptor
	fd_Metrics_total_mining_supply          protoreflect.FieldDescriptor
	fd_Metrics_total_mined_tokens           protoreflect.FieldDescriptor
	fd_Metrics_total_resource_nodes_deposit protoreflect.FieldDescriptor
	fd_Metrics_total_bonded_delegation      protoreflect.FieldDescriptor
	fd_Metrics_total_unbonded_delegation    protoreflect.FieldDescriptor
	fd_Metrics_total_unbonding_delegation   protoreflect.FieldDescriptor
	fd_Metrics_circulation_supply           protoreflect.FieldDescriptor
	fd_Metrics_total_mining_reward          protoreflect.FieldDescriptor
	fd_Metrics_chain_mining_reward          protoreflect.FieldDescriptor
	fd_Metrics_resource_mining_reward       protoreflect.FieldDescriptor
	fd_Metrics_meta_mining_reward           protoreflect.FieldDescriptor
)

func init() {
	file_stratos_pot_v1_pot_proto_init()
	md_Metrics = File_stratos_pot_v1_pot_proto.Messages().ByName("Metrics")
	fd_Metrics_total_supply = md_Metrics.Fields().ByName("total_supply")
	fd_Metrics_total_mining_supply = md_Metrics.Fields().ByName("total_mining_supply")
	fd_Metrics_total_mined_tokens = md_Metrics.Fields().ByName("total_mined_tokens")
	fd_Metrics_total_resource_nodes_deposit = md_Metrics.Fields().ByName("total_resource_nodes_deposit")
	fd_Metrics_total_bonded_delegation = md_Metrics.Fields().ByName("total_bonded_delegation")
	fd_Metrics_total_unbonded_delegation = md_Metrics.Fields().ByName("total_unbonded_delegation")
	fd_Metrics_total_unbonding_delegation = md_Metrics.Fields().ByName("total_unbonding_delegation")
	fd_Metrics_circulation_supply = md_Metrics.Fields().ByName("circulation_supply")
	fd_Metrics_total_mining_reward = md_Metrics.Fields().ByName("total_mining_reward")
	fd_Metrics_chain_mining_reward = md_Metrics.Fields().ByName("chain_mining_reward")
	fd_Metrics_resource_mining_reward = md_Metrics.Fields().ByName("resource_mining_reward")
	fd_Metrics_meta_mining_reward = md_Metrics.Fields().ByName("meta_mining_reward")
}

var _ protoreflect.Message = (*fastReflection_Metrics)(nil)

type fastReflection_Metrics Metrics

func (x *Metrics) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Metrics)(x)
}

func (x *Metrics) slowProtoReflect() protoreflect.Message {
	mi := &file_stratos_pot_v1_pot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Metrics_messageType fastReflection_Metrics_messageType
var _ protoreflect.MessageType = fastReflection_Metrics_messageType{}

type fastReflection_Metrics_messageType struct{}

func (x fastReflection_Metrics_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Metrics)(nil)
}
func (x fastReflection_Metrics_messageType) New() protoreflect.Message {
	return new(fastReflection_Metrics)
}
func (x fastReflection_Metrics_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Metrics
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Metrics) Descriptor() protoreflect.MessageDescriptor {
	return md_Metrics
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Metrics) Type() protoreflect.MessageType {
	return _fastReflection_Metrics_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Metrics) New() protoreflect.Message {
	return new(fastReflection_Metrics)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Metrics) Interface() protoreflect.ProtoMessage {
	return (*Metrics)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Metrics) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalSupply != "" {
		value := protoreflect.ValueOfString(x.TotalSupply)
		if !f(fd_Metrics_total_supply, value) {
			return
		}
	}
	if x.TotalMiningSupply != "" {
		value := protoreflect.ValueOfString(x.TotalMiningSupply)
		if !f(fd_Metrics_total_mining_supply, value) {
			return
		}
	}
	if x.TotalMinedTokens != "" {
		value := protoreflect.ValueOfString(x.TotalMinedTokens)
		if !f(fd_Metrics_total_mined_tokens, value) {
			return
		}
	}
	if x.TotalResourceNodesDeposit != "" {
		value := protoreflect.ValueOfString(x.TotalResourceNodesDeposit)
		if !f(fd_Metrics_total_resource_nodes_deposit, value) {
			return
		}
	}
	if x.TotalBondedDelegation != "" {
		value := protoreflect.ValueOfString(x.TotalBondedDelegation)
		if !f(fd_Metrics_total_bonded_delegation, value) {
			return
		}
	}
	if x.TotalUnbondedDelegation != "" {
		value := protoreflect.ValueOfString(x.TotalUnbondedDelegation)
		if !f(fd_Metrics_total_unbonded_delegation, value) {
			return
		}
	}
	if x.TotalUnbondingDelegation != "" {
		value := protoreflect.ValueOfString(x.TotalUnbondingDelegation)
		if !f(fd_Metrics_total_unbonding_delegation, value) {
			return
		}
	}
	if x.CirculationSupply != "" {
		value := protoreflect.ValueOfString(x.CirculationSupply)
		if !f(fd_Metrics_circulation_supply, value) {
			return
		}
	}
	if x.TotalMiningReward != "" {
		value := protoreflect.ValueOfString(x.TotalMiningReward)
		if !f(fd_Metrics_total_mining_reward, value) {
			return
		}
	}
	if x.ChainMiningReward != "" {
		value := protoreflect.ValueOfString(x.ChainMiningReward)
		if !f(fd_Metrics_chain_mining_reward, value) {
			return
		}
	}
	if x.ResourceMiningReward != "" {
		value := protoreflect.ValueOfString(x.ResourceMiningReward)
		if !f(fd_Metrics_resource_mining_reward, value) {
			return
		}
	}
	if x.MetaMiningReward != "" {
		value := protoreflect.ValueOfString(x.MetaMiningReward)
		if !f(fd_Metrics_meta_mining_reward, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Metrics) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "stratos.pot.v1.Metrics.total_supply":
		return x.TotalSupply != ""
	case "stratos.pot.v1.Metrics.total_mining_supply":
		return x.TotalMiningSupply != ""
	case "stratos.pot.v1.Metrics.total_mined_tokens":
		return x.TotalMinedTokens != ""
	case "stratos.pot.v1.Metrics.total_resource_nodes_deposit":
		return x.TotalResourceNodesDeposit != ""
	case "stratos.pot.v1.Metrics.total_bonded_delegation":
		return x.TotalBondedDelegation != ""
	case "stratos.pot.v1.Metrics.total_unbonded_delegation":
		return x.TotalUnbondedDelegation != ""
	case "stratos.pot.v1.Metrics.total_unbonding_delegation":
		return x.TotalUnbondingDelegation != ""
	case "stratos.pot.v1.Metrics.circulation_supply":
		return x.CirculationSupply != ""
	case "stratos.pot.v1.Metrics.total_mining_reward":
		return x.TotalMiningReward != ""
	case "stratos.pot.v1.Metrics.chain_mining_reward":
		return x.ChainMiningReward != ""
	case "stratos.pot.v1.Metrics.resource_mining_reward":
		return x.ResourceMiningReward != ""
	case "stratos.pot.v1.Metrics.meta_mining_reward":
		return x.MetaMiningReward != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Metrics"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Metrics does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metrics) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "stratos.pot.v1.Metrics.total_supply":
		x.TotalSupply = ""
	case "stratos.pot.v1.Metrics.total_mining_supply":
		x.TotalMiningSupply = ""
	case "stratos.pot.v1.Metrics.total_mined_tokens":
		x.TotalMinedTokens = ""
	case "stratos.pot.v1.Metrics.total_resource_nodes_deposit":
		x.TotalResourceNodesDeposit = ""
	case "stratos.pot.v1.Metrics.total_bonded_delegation":
		x.TotalBondedDelegation = ""
	case "stratos.pot.v1.Metrics.total_unbonded_delegation":
		x.TotalUnbondedDelegation = ""
	case "stratos.pot.v1.Metrics.total_unbonding_delegation":
		x.TotalUnbondingDelegation = ""
	case "stratos.pot.v1.Metrics.circulation_supply":
		x.CirculationSupply = ""
	case "stratos.pot.v1.Metrics.total_mining_reward":
		x.TotalMiningReward = ""
	case "stratos.pot.v1.Metrics.chain_mining_reward":
		x.ChainMiningReward = ""
	case "stratos.pot.v1.Metrics.resource_mining_reward":
		x.ResourceMiningReward = ""
	case "stratos.pot.v1.Metrics.meta_mining_reward":
		x.MetaMiningReward = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Metrics"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Metrics does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Metrics) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "stratos.pot.v1.Metrics.total_supply":
		value := x.TotalSupply
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_mining_supply":
		value := x.TotalMiningSupply
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_mined_tokens":
		value := x.TotalMinedTokens
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_resource_nodes_deposit":
		value := x.TotalResourceNodesDeposit
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_bonded_delegation":
		value := x.TotalBondedDelegation
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_unbonded_delegation":
		value := x.TotalUnbondedDelegation
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_unbonding_delegation":
		value := x.TotalUnbondingDelegation
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.circulation_supply":
		value := x.CirculationSupply
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.total_mining_reward":
		value := x.TotalMiningReward
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.chain_mining_reward":
		value := x.ChainMiningReward
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.resource_mining_reward":
		value := x.ResourceMiningReward
		return protoreflect.ValueOfString(value)
	case "stratos.pot.v1.Metrics.meta_mining_reward":
		value := x.MetaMiningReward
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Metrics"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Metrics does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metrics) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "stratos.pot.v1.Metrics.total_supply":
		x.TotalSupply = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_mining_supply":
		x.TotalMiningSupply = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_mined_tokens":
		x.TotalMinedTokens = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_resource_nodes_deposit":
		x.TotalResourceNodesDeposit = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_bonded_delegation":
		x.TotalBondedDelegation = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_unbonded_delegation":
		x.TotalUnbondedDelegation = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_unbonding_delegation":
		x.TotalUnbondingDelegation = value.Interface().(string)
	case "stratos.pot.v1.Metrics.circulation_supply":
		x.CirculationSupply = value.Interface().(string)
	case "stratos.pot.v1.Metrics.total_mining_reward":
		x.TotalMiningReward = value.Interface().(string)
	case "stratos.pot.v1.Metrics.chain_mining_reward":
		x.ChainMiningReward = value.Interface().(string)
	case "stratos.pot.v1.Metrics.resource_mining_reward":
		x.ResourceMiningReward = value.Interface().(string)
	case "stratos.pot.v1.Metrics.meta_mining_reward":
		x.MetaMiningReward = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Metrics"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Metrics does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metrics) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.Metrics.total_supply":
		panic(fmt.Errorf("field total_supply of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_mining_supply":
		panic(fmt.Errorf("field total_mining_supply of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_mined_tokens":
		panic(fmt.Errorf("field total_mined_tokens of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_resource_nodes_deposit":
		panic(fmt.Errorf("field total_resource_nodes_deposit of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_bonded_delegation":
		panic(fmt.Errorf("field total_bonded_delegation of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_unbonded_delegation":
		panic(fmt.Errorf("field total_unbonded_delegation of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_unbonding_delegation":
		panic(fmt.Errorf("field total_unbonding_delegation of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.circulation_supply":
		panic(fmt.Errorf("field circulation_supply of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.total_mining_reward":
		panic(fmt.Errorf("field total_mining_reward of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.chain_mining_reward":
		panic(fmt.Errorf("field chain_mining_reward of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.resource_mining_reward":
		panic(fmt.Errorf("field resource_mining_reward of message stratos.pot.v1.Metrics is not mutable"))
	case "stratos.pot.v1.Metrics.meta_mining_reward":
		panic(fmt.Errorf("field meta_mining_reward of message stratos.pot.v1.Metrics is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Metrics"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Metrics does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Metrics) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "stratos.pot.v1.Metrics.total_supply":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_mining_supply":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_mined_tokens":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_resource_nodes_deposit":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_bonded_delegation":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_unbonded_delegation":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_unbonding_delegation":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.circulation_supply":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.total_mining_reward":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.chain_mining_reward":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.resource_mining_reward":
		return protoreflect.ValueOfString("")
	case "stratos.pot.v1.Metrics.meta_mining_reward":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: stratos.pot.v1.Metrics"))
		}
		panic(fmt.Errorf("message stratos.pot.v1.Metrics does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Metrics) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in stratos.pot.v1.Metrics", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Metrics) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metrics) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Metrics) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Metrics) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Metrics)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TotalSupply)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalMiningSupply)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalMinedTokens)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalResourceNodesDeposit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalBondedDelegation)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalUnbondedDelegation)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalUnbondingDelegation)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CirculationSupply)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalMiningReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChainMiningReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ResourceMiningReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MetaMiningReward)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Metrics)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MetaMiningReward) > 0 {
			i -= len(x.MetaMiningReward)
			copy(dAtA[i:], x.MetaMiningReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MetaMiningReward)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.ResourceMiningReward) > 0 {
			i -= len(x.ResourceMiningReward)
			copy(dAtA[i:], x.ResourceMiningReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ResourceMiningReward)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.ChainMiningReward) > 0 {
			i -= len(x.ChainMiningReward)
			copy(dAtA[i:], x.ChainMiningReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainMiningReward)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.TotalMiningReward) > 0 {
			i -= len(x.TotalMiningReward)
			copy(dAtA[i:], x.TotalMiningReward)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalMiningReward)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.CirculationSupply) > 0 {
			i -= len(x.CirculationSupply)
			copy(dAtA[i:], x.CirculationSupply)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CirculationSupply)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.TotalUnbondingDelegation) > 0 {
			i -= len(x.TotalUnbondingDelegation)
			copy(dAtA[i:], x.TotalUnbondingDelegation)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalUnbondingDelegation)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.TotalUnbondedDelegation) > 0 {
			i -= len(x.TotalUnbondedDelegation)
			copy(dAtA[i:], x.TotalUnbondedDelegation)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalUnbondedDelegation)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.TotalBondedDelegation) > 0 {
			i -= len(x.TotalBondedDelegation)
			copy(dAtA[i:], x.TotalBondedDelegation)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalBondedDelegation)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.TotalResourceNodesDeposit) > 0 {
			i -= len(x.TotalResourceNodesDeposit)
			copy(dAtA[i:], x.TotalResourceNodesDeposit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalResourceNodesDeposit)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TotalMinedTokens) > 0 {
			i -= len(x.TotalMinedTokens)
			copy(dAtA[i:], x.TotalMinedTokens)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalMinedTokens)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TotalMiningSupply) > 0 {
			i -= len(x.TotalMiningSupply)
			copy(dAtA[i:], x.TotalMiningSupply)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalMiningSupply)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TotalSupply) > 0 {
			i -= len(x.TotalSupply)
			copy(dAtA[i:], x.TotalSupply)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalSupply)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Metrics)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Metrics: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Metrics: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalSupply", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalSupply = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalMiningSupply", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalMiningSupply = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalMinedTokens", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalMinedTokens = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalResourceNodesDeposit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalResourceNodesDeposit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalBondedDelegation", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalBondedDelegation = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalUnbondedDelegation", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalUnbondedDelegation = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalUnbondingDelegation", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalUnbondingDelegation = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CirculationSupply", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CirculationSupply = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalMiningReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalMiningReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainMiningReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainMiningReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ResourceMiningReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ResourceMiningReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetaMiningReward", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MetaMiningReward = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: stratos/pot/v1/pot.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Params defines the PoT module parameters
type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BondDenom          string               `protobuf:"bytes,1,opt,name=bond_denom,json=bondDenom,proto3" json:"bond_denom,omitempty"`
	RewardDenom        string               `protobuf:"bytes,2,opt,name=reward_denom,json=rewardDenom,proto3" json:"reward_denom,omitempty"`
	MatureEpoch        int64                `protobuf:"varint,3,opt,name=mature_epoch,json=matureEpoch,proto3" json:"mature_epoch,omitempty"`
	MiningRewardParams []*MiningRewardParam `protobuf:"bytes,4,rep,name=mining_reward_params,json=miningRewardParams,proto3" json:"mining_reward_params,omitempty"`
	CommunityTax       string               `protobuf:"bytes,5,opt,name=community_tax,json=communityTax,proto3" json:"community_tax,omitempty"`
	InitialTotalSupply *v1beta1.Coin        `protobuf:"bytes,6,opt,name=initial_total_supply,json=initialTotalSupply,proto3" json:"initial_total_supply,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{0}
}

func (x *Params) GetBondDenom() string {
	if x != nil {
		return x.BondDenom
	}
	return ""
}

func (x *Params) GetRewardDenom() string {
	if x != nil {
		return x.RewardDenom
	}
	return ""
}

func (x *Params) GetMatureEpoch() int64 {
	if x != nil {
		return x.MatureEpoch
	}
	return 0
}

func (x *Params) GetMiningRewardParams() []*MiningRewardParam {
	if x != nil {
		return x.MiningRewardParams
	}
	return nil
}

func (x *Params) GetCommunityTax() string {
	if x != nil {
		return x.CommunityTax
	}
	return ""
}

func (x *Params) GetInitialTotalSupply() *v1beta1.Coin {
	if x != nil {
		return x.InitialTotalSupply
	}
	return nil
}

type MiningRewardParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalMinedValveStart       *v1beta1.Coin `protobuf:"bytes,1,opt,name=total_mined_valve_start,json=totalMinedValveStart,proto3" json:"total_mined_valve_start,omitempty"`
	TotalMinedValveEnd         *v1beta1.Coin `protobuf:"bytes,2,opt,name=total_mined_valve_end,json=totalMinedValveEnd,proto3" json:"total_mined_valve_end,omitempty"`
	MiningReward               *v1beta1.Coin `protobuf:"bytes,3,opt,name=mining_reward,json=miningReward,proto3" json:"mining_reward,omitempty"`
	BlockChainPercentageInBp   string        `protobuf:"bytes,4,opt,name=block_chain_percentage_in_bp,json=blockChainPercentageInBp,proto3" json:"block_chain_percentage_in_bp,omitempty"`
	ResourceNodePercentageInBp string        `protobuf:"bytes,5,opt,name=resource_node_percentage_in_bp,json=resourceNodePercentageInBp,proto3" json:"resource_node_percentage_in_bp,omitempty"`
	MetaNodePercentageInBp     string        `protobuf:"bytes,6,opt,name=meta_node_percentage_in_bp,json=metaNodePercentageInBp,proto3" json:"meta_node_percentage_in_bp,omitempty"`
}

func (x *MiningRewardParam) Reset() {
	*x = MiningRewardParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningRewardParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningRewardParam) ProtoMessage() {}

// Deprecated: Use MiningRewardParam.ProtoReflect.Descriptor instead.
func (*MiningRewardParam) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{1}
}

func (x *MiningRewardParam) GetTotalMinedValveStart() *v1beta1.Coin {
	if x != nil {
		return x.TotalMinedValveStart
	}
	return nil
}

func (x *MiningRewardParam) GetTotalMinedValveEnd() *v1beta1.Coin {
	if x != nil {
		return x.TotalMinedValveEnd
	}
	return nil
}

func (x *MiningRewardParam) GetMiningReward() *v1beta1.Coin {
	if x != nil {
		return x.MiningReward
	}
	return nil
}

func (x *MiningRewardParam) GetBlockChainPercentageInBp() string {
	if x != nil {
		return x.BlockChainPercentageInBp
	}
	return ""
}

func (x *MiningRewardParam) GetResourceNodePercentageInBp() string {
	if x != nil {
		return x.ResourceNodePercentageInBp
	}
	return ""
}

func (x *MiningRewardParam) GetMetaNodePercentageInBp() string {
	if x != nil {
		return x.MetaNodePercentageInBp
	}
	return ""
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress         string          `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	RewardFromMiningPool  []*v1beta1.Coin `protobuf:"bytes,2,rep,name=reward_from_mining_pool,json=rewardFromMiningPool,proto3" json:"reward_from_mining_pool,omitempty"`
	RewardFromTrafficPool []*v1beta1.Coin `protobuf:"bytes,3,rep,name=reward_from_traffic_pool,json=rewardFromTrafficPool,proto3" json:"reward_from_traffic_pool,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{2}
}

func (x *Reward) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *Reward) GetRewardFromMiningPool() []*v1beta1.Coin {
	if x != nil {
		return x.RewardFromMiningPool
	}
	return nil
}

func (x *Reward) GetRewardFromTrafficPool() []*v1beta1.Coin {
	if x != nil {
		return x.RewardFromTrafficPool
	}
	return nil
}

type SingleWalletVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Volume        string `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *SingleWalletVolume) Reset() {
	*x = SingleWalletVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleWalletVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleWalletVolume) ProtoMessage() {}

// Deprecated: Use SingleWalletVolume.ProtoReflect.Descriptor instead.
func (*SingleWalletVolume) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{3}
}

func (x *SingleWalletVolume) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *SingleWalletVolume) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type WalletVolumes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes []*SingleWalletVolume `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *WalletVolumes) Reset() {
	*x = WalletVolumes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletVolumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletVolumes) ProtoMessage() {}

// Deprecated: Use WalletVolumes.ProtoReflect.Descriptor instead.
func (*WalletVolumes) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{4}
}

func (x *WalletVolumes) GetVolumes() []*SingleWalletVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type VolumeReportRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reporter        string `protobuf:"bytes,1,opt,name=reporter,proto3" json:"reporter,omitempty"`
	ReportReference string `protobuf:"bytes,2,opt,name=report_reference,json=reportReference,proto3" json:"report_reference,omitempty"`
	TxHash          string `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *VolumeReportRecord) Reset() {
	*x = VolumeReportRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeReportRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeReportRecord) ProtoMessage() {}

// Deprecated: Use VolumeReportRecord.ProtoReflect.Descriptor instead.
func (*VolumeReportRecord) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{5}
}

func (x *VolumeReportRecord) GetReporter() string {
	if x != nil {
		return x.Reporter
	}
	return ""
}

func (x *VolumeReportRecord) GetReportReference() string {
	if x != nil {
		return x.ReportReference
	}
	return ""
}

func (x *VolumeReportRecord) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type TotalReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiningReward  []*v1beta1.Coin `protobuf:"bytes,1,rep,name=mining_reward,json=miningReward,proto3" json:"mining_reward,omitempty"`
	TrafficReward []*v1beta1.Coin `protobuf:"bytes,2,rep,name=traffic_reward,json=trafficReward,proto3" json:"traffic_reward,omitempty"`
}

func (x *TotalReward) Reset() {
	*x = TotalReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalReward) ProtoMessage() {}

// Deprecated: Use TotalReward.ProtoReflect.Descriptor instead.
func (*TotalReward) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{6}
}

func (x *TotalReward) GetMiningReward() []*v1beta1.Coin {
	if x != nil {
		return x.MiningReward
	}
	return nil
}

func (x *TotalReward) GetTrafficReward() []*v1beta1.Coin {
	if x != nil {
		return x.TrafficReward
	}
	return nil
}

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSupply               string `protobuf:"bytes,1,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	TotalMiningSupply         string `protobuf:"bytes,2,opt,name=total_mining_supply,json=totalMiningSupply,proto3" json:"total_mining_supply,omitempty"`
	TotalMinedTokens          string `protobuf:"bytes,3,opt,name=total_mined_tokens,json=totalMinedTokens,proto3" json:"total_mined_tokens,omitempty"`
	TotalResourceNodesDeposit string `protobuf:"bytes,4,opt,name=total_resource_nodes_deposit,json=totalResourceNodesDeposit,proto3" json:"total_resource_nodes_deposit,omitempty"`
	TotalBondedDelegation     string `protobuf:"bytes,5,opt,name=total_bonded_delegation,json=totalBondedDelegation,proto3" json:"total_bonded_delegation,omitempty"`
	TotalUnbondedDelegation   string `protobuf:"bytes,6,opt,name=total_unbonded_delegation,json=totalUnbondedDelegation,proto3" json:"total_unbonded_delegation,omitempty"`
	TotalUnbondingDelegation  string `protobuf:"bytes,7,opt,name=total_unbonding_delegation,json=totalUnbondingDelegation,proto3" json:"total_unbonding_delegation,omitempty"`
	CirculationSupply         string `protobuf:"bytes,8,opt,name=circulation_supply,json=circulationSupply,proto3" json:"circulation_supply,omitempty"`
	TotalMiningReward         string `protobuf:"bytes,9,opt,name=total_mining_reward,json=totalMiningReward,proto3" json:"total_mining_reward,omitempty"`
	ChainMiningReward         string `protobuf:"bytes,10,opt,name=chain_mining_reward,json=chainMiningReward,proto3" json:"chain_mining_reward,omitempty"`
	ResourceMiningReward      string `protobuf:"bytes,11,opt,name=resource_mining_reward,json=resourceMiningReward,proto3" json:"resource_mining_reward,omitempty"`
	MetaMiningReward          string `protobuf:"bytes,12,opt,name=meta_mining_reward,json=metaMiningReward,proto3" json:"meta_mining_reward,omitempty"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stratos_pot_v1_pot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_stratos_pot_v1_pot_proto_rawDescGZIP(), []int{7}
}

func (x *Metrics) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *Metrics) GetTotalMiningSupply() string {
	if x != nil {
		return x.TotalMiningSupply
	}
	return ""
}

func (x *Metrics) GetTotalMinedTokens() string {
	if x != nil {
		return x.TotalMinedTokens
	}
	return ""
}

func (x *Metrics) GetTotalResourceNodesDeposit() string {
	if x != nil {
		return x.TotalResourceNodesDeposit
	}
	return ""
}

func (x *Metrics) GetTotalBondedDelegation() string {
	if x != nil {
		return x.TotalBondedDelegation
	}
	return ""
}

func (x *Metrics) GetTotalUnbondedDelegation() string {
	if x != nil {
		return x.TotalUnbondedDelegation
	}
	return ""
}

func (x *Metrics) GetTotalUnbondingDelegation() string {
	if x != nil {
		return x.TotalUnbondingDelegation
	}
	return ""
}

func (x *Metrics) GetCirculationSupply() string {
	if x != nil {
		return x.CirculationSupply
	}
	return ""
}

func (x *Metrics) GetTotalMiningReward() string {
	if x != nil {
		return x.TotalMiningReward
	}
	return ""
}

func (x *Metrics) GetChainMiningReward() string {
	if x != nil {
		return x.ChainMiningReward
	}
	return ""
}

func (x *Metrics) GetResourceMiningReward() string {
	if x != nil {
		return x.ResourceMiningReward
	}
	return ""
}

func (x *Metrics) GetMetaMiningReward() string {
	if x != nil {
		return x.MetaMiningReward
	}
	return ""
}

var File_stratos_pot_v1_pot_proto protoreflect.FileDescriptor

var file_stratos_pot_v1_pot_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6f, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69,
	0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd,
	0x05, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x62, 0x6f, 0x6e,
	0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xea,
	0xde, 0x1f, 0x0a, 0x62, 0x6f, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0xf2, 0xde, 0x1f,
	0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x62, 0x6f, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x22, 0x52, 0x09, 0x62, 0x6f, 0x6e, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x4a, 0x0a,
	0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x27, 0xea, 0xde, 0x1f, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x52, 0x0b, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x4a, 0x0a, 0x0c, 0x6d, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x27, 0xea, 0xde, 0x1f, 0x0c, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x40, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f,
	0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x8f, 0x01,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x61, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6a, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0xea, 0xde, 0x1f, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x61, 0x78, 0xf2, 0xde, 0x1f, 0x14, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x61, 0x78, 0x22, 0xd2, 0xb4,
	0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x54, 0x61, 0x78, 0x12,
	0x8d, 0x01, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x40, 0xc8, 0xde, 0x1f, 0x00, 0xea,
	0xde, 0x1f, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x12, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x3a,
	0x1d, 0x98, 0xa0, 0x1f, 0x01, 0x8a, 0xe7, 0xb0, 0x2a, 0x14, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2f, 0x78, 0x2f, 0x70, 0x6f, 0x74, 0x2f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x99,
	0x08, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x98, 0x01, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x42, 0x46, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0xf2, 0xde, 0x1f, 0x1e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x22, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4d, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x90, 0x01, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x76, 0x61, 0x6c, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x42, 0xc8, 0xde, 0x1f, 0x00,
	0xea, 0xde, 0x1f, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x76, 0x61, 0x6c, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0xf2, 0xde, 0x1f, 0x1c, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76,
	0x61, 0x6c, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x22, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x45,
	0x6e, 0x64, 0x12, 0x72, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x32, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x0d, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0xf2, 0xde, 0x1f, 0x14, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x22, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0xc9, 0x01, 0x0a, 0x1c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x88, 0x01,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde,
	0x1f, 0x1c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x70, 0xf2, 0xde,
	0x1f, 0x23, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x62, 0x70, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x18, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x42, 0x70, 0x12, 0xd1, 0x01, 0x0a, 0x1e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x62, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8c, 0x01, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x1e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x70, 0xf2, 0xde,
	0x1f, 0x25, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x70, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x1a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x42, 0x70, 0x12, 0xc1, 0x01, 0x0a, 0x1a, 0x6d, 0x65, 0x74, 0x61, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x62, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x84, 0x01, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x1a,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x70, 0xf2, 0xde, 0x1f, 0x21, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x70, 0x22, 0xd2,
	0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0,
	0x2a, 0x01, 0x52, 0x16, 0x6d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x42, 0x70, 0x22, 0x86, 0x04, 0x0a, 0x06, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x6a, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x43, 0xea,
	0xde, 0x1f, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0xc4, 0x01, 0x0a, 0x17, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x72,
	0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x17, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0xf2,
	0xde, 0x1f, 0x1e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6f, 0x6c,
	0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0,
	0x2a, 0x01, 0x52, 0x14, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0xc8, 0x01, 0x0a, 0x18, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x74, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x18,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0xf2, 0xde, 0x1f, 0x1f, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x15, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x6f, 0x6f, 0x6c, 0x22, 0xf6, 0x01, 0x0a, 0x12, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x6a, 0x0a, 0x0e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x43, 0xea, 0xde, 0x1f, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x74, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8,
	0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x0d,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x64, 0x0a,
	0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x42, 0x26, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x07, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x22, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x12, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x53, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xea, 0xde,
	0x1f, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x22, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12,
	0x5a, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xea, 0xde, 0x1f, 0x10, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0xf2,
	0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x74,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xea, 0xde,
	0x1f, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x52, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x22, 0xd3, 0x02, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x5e, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x0d,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0xf2, 0xde, 0x1f,
	0x14, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0xa2, 0x01, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x60, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde,
	0x1f, 0x0e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xc5, 0x10, 0x0a, 0x07, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x68, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0xf2, 0xde, 0x1f, 0x13,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x12, 0xa6, 0x01, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x76, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0xea, 0xde, 0x1f, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0xa2, 0x01, 0x0a,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x74, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x12, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0xf2,
	0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xd2, 0xb4, 0x2d, 0x0a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x12, 0xca, 0x01, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x88, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x1c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0xf2, 0xde, 0x1f, 0x23, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x22,
	0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0xb6,
	0x01, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x7e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0xea, 0xde, 0x1f, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xde, 0x1f, 0x1e, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0xb4, 0x2d,
	0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbf, 0x01, 0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x82, 0x01, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x19,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xde, 0x1f, 0x20, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0xb4, 0x2d,
	0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xc3, 0x01, 0x0a, 0x1a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x84,
	0x01, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea,
	0xde, 0x1f, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xde, 0x1f,
	0x21, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x62,
	0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x62, 0x6f,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0xa3, 0x01, 0x0a, 0x12, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x74, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x12,
	0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x69, 0x72, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xd2,
	0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0,
	0x2a, 0x01, 0x52, 0x11, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0xa6, 0x01, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x76, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0xa6,
	0x01, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x76, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x13,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8,
	0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x11, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0xb2, 0x01, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x16, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0xf2, 0xde, 0x1f, 0x1d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0xa2, 0x01, 0x0a,
	0x12, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x74, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xea, 0xde, 0x1f, 0x12, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0xf2,
	0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xd2, 0xb4, 0x2d, 0x0a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52,
	0x10, 0x6d, 0x65, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x42, 0xa3, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x50, 0x6f, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2f, 0x70,
	0x6f, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6f, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x50,
	0x58, 0xaa, 0x02, 0x0e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x74, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x5c, 0x50, 0x6f, 0x74,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x53, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x5c, 0x50, 0x6f,
	0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x10, 0x53, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x3a, 0x3a, 0x50, 0x6f, 0x74, 0x3a,
	0x3a, 0x56, 0x31, 0xa8, 0xe2, 0x1e, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stratos_pot_v1_pot_proto_rawDescOnce sync.Once
	file_stratos_pot_v1_pot_proto_rawDescData = file_stratos_pot_v1_pot_proto_rawDesc
)

func file_stratos_pot_v1_pot_proto_rawDescGZIP() []byte {
	file_stratos_pot_v1_pot_proto_rawDescOnce.Do(func() {
		file_stratos_pot_v1_pot_proto_rawDescData = protoimpl.X.CompressGZIP(file_stratos_pot_v1_pot_proto_rawDescData)
	})
	return file_stratos_pot_v1_pot_proto_rawDescData
}

var file_stratos_pot_v1_pot_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_stratos_pot_v1_pot_proto_goTypes = []interface{}{
	(*Params)(nil),             // 0: stratos.pot.v1.Params
	(*MiningRewardParam)(nil),  // 1: stratos.pot.v1.MiningRewardParam
	(*Reward)(nil),             // 2: stratos.pot.v1.Reward
	(*SingleWalletVolume)(nil), // 3: stratos.pot.v1.SingleWalletVolume
	(*WalletVolumes)(nil),      // 4: stratos.pot.v1.WalletVolumes
	(*VolumeReportRecord)(nil), // 5: stratos.pot.v1.VolumeReportRecord
	(*TotalReward)(nil),        // 6: stratos.pot.v1.TotalReward
	(*Metrics)(nil),            // 7: stratos.pot.v1.Metrics
	(*v1beta1.Coin)(nil),       // 8: cosmos.base.v1beta1.Coin
}
var file_stratos_pot_v1_pot_proto_depIdxs = []int32{
	1,  // 0: stratos.pot.v1.Params.mining_reward_params:type_name -> stratos.pot.v1.MiningRewardParam
	8,  // 1: stratos.pot.v1.Params.initial_total_supply:type_name -> cosmos.base.v1beta1.Coin
	8,  // 2: stratos.pot.v1.MiningRewardParam.total_mined_valve_start:type_name -> cosmos.base.v1beta1.Coin
	8,  // 3: stratos.pot.v1.MiningRewardParam.total_mined_valve_end:type_name -> cosmos.base.v1beta1.Coin
	8,  // 4: stratos.pot.v1.MiningRewardParam.mining_reward:type_name -> cosmos.base.v1beta1.Coin
	8,  // 5: stratos.pot.v1.Reward.reward_from_mining_pool:type_name -> cosmos.base.v1beta1.Coin
	8,  // 6: stratos.pot.v1.Reward.reward_from_traffic_pool:type_name -> cosmos.base.v1beta1.Coin
	3,  // 7: stratos.pot.v1.WalletVolumes.volumes:type_name -> stratos.pot.v1.SingleWalletVolume
	8,  // 8: stratos.pot.v1.TotalReward.mining_reward:type_name -> cosmos.base.v1beta1.Coin
	8,  // 9: stratos.pot.v1.TotalReward.traffic_reward:type_name -> cosmos.base.v1beta1.Coin
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_stratos_pot_v1_pot_proto_init() }
func file_stratos_pot_v1_pot_proto_init() {
	if File_stratos_pot_v1_pot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stratos_pot_v1_pot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningRewardParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleWalletVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletVolumes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeReportRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stratos_pot_v1_pot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stratos_pot_v1_pot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_stratos_pot_v1_pot_proto_goTypes,
		DependencyIndexes: file_stratos_pot_v1_pot_proto_depIdxs,
		MessageInfos:      file_stratos_pot_v1_pot_proto_msgTypes,
	}.Build()
	File_stratos_pot_v1_pot_proto = out.File
	file_stratos_pot_v1_pot_proto_rawDesc = nil
	file_stratos_pot_v1_pot_proto_goTypes = nil
	file_stratos_pot_v1_pot_proto_depIdxs = nil
}
