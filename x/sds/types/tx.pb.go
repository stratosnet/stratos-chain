// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stratos/sds/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgFileUpload struct {
	FileHash string `protobuf:"bytes,1,opt,name=file_hash,json=fileHash,proto3" json:"file_hash" yaml:"file_hash"`
	From     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from" yaml:"from"`
	Reporter string `protobuf:"bytes,3,opt,name=reporter,proto3" json:"reporter" yaml:"reporter"`
	Uploader string `protobuf:"bytes,4,opt,name=uploader,proto3" json:"uploader" yaml:"uploader"`
}

func (m *MsgFileUpload) Reset()         { *m = MsgFileUpload{} }
func (m *MsgFileUpload) String() string { return proto.CompactTextString(m) }
func (*MsgFileUpload) ProtoMessage()    {}
func (*MsgFileUpload) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a216e2f9435b27, []int{0}
}
func (m *MsgFileUpload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFileUpload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFileUpload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFileUpload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFileUpload.Merge(m, src)
}
func (m *MsgFileUpload) XXX_Size() int {
	return m.Size()
}
func (m *MsgFileUpload) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFileUpload.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFileUpload proto.InternalMessageInfo

func (m *MsgFileUpload) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *MsgFileUpload) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgFileUpload) GetReporter() string {
	if m != nil {
		return m.Reporter
	}
	return ""
}

func (m *MsgFileUpload) GetUploader() string {
	if m != nil {
		return m.Uploader
	}
	return ""
}

type MsgFileUploadResponse struct {
}

func (m *MsgFileUploadResponse) Reset()         { *m = MsgFileUploadResponse{} }
func (m *MsgFileUploadResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFileUploadResponse) ProtoMessage()    {}
func (*MsgFileUploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a216e2f9435b27, []int{1}
}
func (m *MsgFileUploadResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFileUploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFileUploadResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFileUploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFileUploadResponse.Merge(m, src)
}
func (m *MsgFileUploadResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFileUploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFileUploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFileUploadResponse proto.InternalMessageInfo

type MsgPrepay struct {
	Sender      string                                   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender" yaml:"sender"`
	Beneficiary string                                   `protobuf:"bytes,2,opt,name=beneficiary,proto3" json:"beneficiary" yaml:"beneficiary"`
	Amount      github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount" yaml:"amount"`
}

func (m *MsgPrepay) Reset()         { *m = MsgPrepay{} }
func (m *MsgPrepay) String() string { return proto.CompactTextString(m) }
func (*MsgPrepay) ProtoMessage()    {}
func (*MsgPrepay) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a216e2f9435b27, []int{2}
}
func (m *MsgPrepay) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPrepay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPrepay.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPrepay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPrepay.Merge(m, src)
}
func (m *MsgPrepay) XXX_Size() int {
	return m.Size()
}
func (m *MsgPrepay) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPrepay.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPrepay proto.InternalMessageInfo

func (m *MsgPrepay) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgPrepay) GetBeneficiary() string {
	if m != nil {
		return m.Beneficiary
	}
	return ""
}

func (m *MsgPrepay) GetAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Amount
	}
	return nil
}

type MsgPrepayResponse struct {
}

func (m *MsgPrepayResponse) Reset()         { *m = MsgPrepayResponse{} }
func (m *MsgPrepayResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPrepayResponse) ProtoMessage()    {}
func (*MsgPrepayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a216e2f9435b27, []int{3}
}
func (m *MsgPrepayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPrepayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPrepayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPrepayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPrepayResponse.Merge(m, src)
}
func (m *MsgPrepayResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPrepayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPrepayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPrepayResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgFileUpload)(nil), "stratos.sds.v1.MsgFileUpload")
	proto.RegisterType((*MsgFileUploadResponse)(nil), "stratos.sds.v1.MsgFileUploadResponse")
	proto.RegisterType((*MsgPrepay)(nil), "stratos.sds.v1.MsgPrepay")
	proto.RegisterType((*MsgPrepayResponse)(nil), "stratos.sds.v1.MsgPrepayResponse")
}

func init() { proto.RegisterFile("stratos/sds/v1/tx.proto", fileDescriptor_a5a216e2f9435b27) }

var fileDescriptor_a5a216e2f9435b27 = []byte{
	// 572 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x41, 0x6b, 0x13, 0x41,
	0x14, 0xce, 0x36, 0xa5, 0xb4, 0x13, 0x6a, 0x75, 0xab, 0x66, 0x9b, 0xda, 0x9d, 0x76, 0xa4, 0x10,
	0x90, 0xee, 0x90, 0xf6, 0xa6, 0xe0, 0x21, 0x82, 0x56, 0x24, 0x20, 0x0b, 0x5e, 0xbc, 0xc8, 0x24,
	0x99, 0x6c, 0x16, 0x77, 0x67, 0x96, 0x9d, 0x49, 0x68, 0x2e, 0x22, 0xde, 0xbc, 0x09, 0xfe, 0x0b,
	0x7f, 0x49, 0x8f, 0x05, 0x2f, 0x9e, 0x56, 0x49, 0x3c, 0xe5, 0x98, 0x83, 0xe0, 0x4d, 0x76, 0x66,
	0xb2, 0x49, 0x8a, 0x7a, 0xda, 0x99, 0xef, 0x7b, 0xdf, 0x7b, 0x6f, 0xdf, 0xf7, 0x06, 0x54, 0x85,
	0x4c, 0x89, 0xe4, 0x02, 0x8b, 0xae, 0xc0, 0xc3, 0x06, 0x96, 0x17, 0x5e, 0x92, 0x72, 0xc9, 0xed,
	0x1b, 0x86, 0xf0, 0x44, 0x57, 0x78, 0xc3, 0x46, 0xed, 0x76, 0xc0, 0x03, 0xae, 0x28, 0x9c, 0x9f,
	0x74, 0x54, 0xed, 0x5e, 0xc0, 0x79, 0x10, 0x51, 0x4c, 0x92, 0x10, 0x13, 0xc6, 0xb8, 0x24, 0x32,
	0xe4, 0x4c, 0x18, 0xd6, 0xed, 0x70, 0x11, 0x73, 0x81, 0xdb, 0x44, 0x50, 0x3c, 0x6c, 0xb4, 0xa9,
	0x24, 0x0d, 0xdc, 0xe1, 0x21, 0xd3, 0x3c, 0xfa, 0x65, 0x81, 0xed, 0x96, 0x08, 0x9e, 0x86, 0x11,
	0x7d, 0x95, 0x44, 0x9c, 0x74, 0xed, 0xc7, 0x60, 0xab, 0x17, 0x46, 0xf4, 0x4d, 0x9f, 0x88, 0xbe,
	0x63, 0x1d, 0x5a, 0xf5, 0xad, 0xe6, 0xd1, 0x34, 0x83, 0x0b, 0x70, 0x96, 0xc1, 0x9b, 0x23, 0x12,
	0x47, 0x0f, 0x51, 0x01, 0x21, 0x7f, 0x33, 0x3f, 0x9f, 0x13, 0xd1, 0xb7, 0x1f, 0x80, 0xf5, 0x5e,
	0xca, 0x63, 0x67, 0x4d, 0x49, 0xab, 0xd3, 0x0c, 0xaa, 0xfb, 0x2c, 0x83, 0x15, 0xa3, 0x4a, 0x79,
	0x8c, 0x7c, 0x05, 0xda, 0x8f, 0xc0, 0x66, 0x4a, 0x13, 0x9e, 0x4a, 0x9a, 0x3a, 0x65, 0x25, 0x80,
	0xd3, 0x0c, 0x16, 0xd8, 0x2c, 0x83, 0x3b, 0x5a, 0x34, 0x47, 0x90, 0x5f, 0x90, 0xb9, 0x78, 0xa0,
	0x7a, 0xa6, 0xa9, 0xb3, 0xbe, 0x10, 0xcf, 0xb1, 0x85, 0x78, 0x8e, 0x20, 0xbf, 0x20, 0x51, 0x15,
	0xdc, 0x59, 0xf9, 0x6f, 0x9f, 0x8a, 0x84, 0x33, 0x41, 0xd1, 0xc7, 0x35, 0xb0, 0xd5, 0x12, 0xc1,
	0xcb, 0x94, 0x26, 0x64, 0x64, 0x9f, 0x81, 0x0d, 0x41, 0x59, 0x5e, 0x41, 0x8f, 0x62, 0x7f, 0x9a,
	0x41, 0x83, 0xcc, 0x32, 0xb8, 0xad, 0xf3, 0xeb, 0x3b, 0xf2, 0x0d, 0x61, 0x3f, 0x03, 0x95, 0x36,
	0x65, 0xb4, 0x17, 0x76, 0x42, 0x92, 0x8e, 0xcc, 0x24, 0x8e, 0xa7, 0x19, 0x5c, 0x86, 0x67, 0x19,
	0xb4, 0xb5, 0x7c, 0x09, 0x44, 0xfe, 0x72, 0x88, 0xfd, 0x0e, 0x6c, 0x90, 0x98, 0x0f, 0x98, 0x74,
	0xca, 0x87, 0xe5, 0x7a, 0xe5, 0x74, 0xcf, 0xd3, 0x76, 0x7a, 0xb9, 0x9d, 0x9e, 0xb1, 0xd3, 0x7b,
	0xc2, 0x43, 0xd6, 0x7c, 0x71, 0x99, 0xc1, 0x52, 0xde, 0x9c, 0x16, 0x2c, 0x9a, 0xd3, 0x77, 0xf4,
	0xe5, 0x3b, 0xac, 0x07, 0xa1, 0xec, 0x0f, 0xda, 0x5e, 0x87, 0xc7, 0xd8, 0xac, 0x85, 0xfe, 0x9c,
	0x88, 0xee, 0x5b, 0x2c, 0x47, 0x09, 0x15, 0x2a, 0x97, 0xf0, 0x4d, 0x12, 0xb4, 0x0b, 0x6e, 0x15,
	0xa3, 0x98, 0x0f, 0xe8, 0xf4, 0xb7, 0x05, 0xca, 0x2d, 0x11, 0xd8, 0xef, 0x2d, 0xb0, 0x7b, 0x4e,
	0x58, 0x37, 0xa2, 0xab, 0x0b, 0x74, 0xe0, 0xad, 0xee, 0xad, 0xb7, 0x42, 0xd7, 0x8e, 0xff, 0x4b,
	0x17, 0x36, 0xdc, 0xff, 0xf0, 0xf5, 0xe7, 0xe7, 0xb5, 0x03, 0xb4, 0x8f, 0xaf, 0x3d, 0x0f, 0xb5,
	0x74, 0xda, 0x46, 0x9b, 0x83, 0x9d, 0xa2, 0x03, 0x63, 0xd8, 0xde, 0x5f, 0xd2, 0x6b, 0xaa, 0x76,
	0xf4, 0x4f, 0xaa, 0xa8, 0xea, 0xaa, 0xaa, 0x0e, 0xba, 0x7b, 0xbd, 0x6a, 0xa2, 0xe2, 0x9a, 0xcf,
	0x2f, 0xc7, 0xae, 0x75, 0x35, 0x76, 0xad, 0x1f, 0x63, 0xd7, 0xfa, 0x34, 0x71, 0x4b, 0x57, 0x13,
	0xb7, 0xf4, 0x6d, 0xe2, 0x96, 0x5e, 0xe3, 0xa5, 0xe1, 0x1a, 0x2d, 0xa3, 0x72, 0x7e, 0x3c, 0xe9,
	0xf4, 0x49, 0xc8, 0xf0, 0x85, 0x4a, 0xa7, 0x26, 0xdd, 0xde, 0x50, 0x0f, 0xf0, 0xec, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x8f, 0xf1, 0x39, 0xd2, 0xff, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateResourceNode defines a method for creating a new resource node.
	HandleMsgFileUpload(ctx context.Context, in *MsgFileUpload, opts ...grpc.CallOption) (*MsgFileUploadResponse, error)
	HandleMsgPrepay(ctx context.Context, in *MsgPrepay, opts ...grpc.CallOption) (*MsgPrepayResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) HandleMsgFileUpload(ctx context.Context, in *MsgFileUpload, opts ...grpc.CallOption) (*MsgFileUploadResponse, error) {
	out := new(MsgFileUploadResponse)
	err := c.cc.Invoke(ctx, "/stratos.sds.v1.Msg/HandleMsgFileUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgPrepay(ctx context.Context, in *MsgPrepay, opts ...grpc.CallOption) (*MsgPrepayResponse, error) {
	out := new(MsgPrepayResponse)
	err := c.cc.Invoke(ctx, "/stratos.sds.v1.Msg/HandleMsgPrepay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateResourceNode defines a method for creating a new resource node.
	HandleMsgFileUpload(context.Context, *MsgFileUpload) (*MsgFileUploadResponse, error)
	HandleMsgPrepay(context.Context, *MsgPrepay) (*MsgPrepayResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) HandleMsgFileUpload(ctx context.Context, req *MsgFileUpload) (*MsgFileUploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgFileUpload not implemented")
}
func (*UnimplementedMsgServer) HandleMsgPrepay(ctx context.Context, req *MsgPrepay) (*MsgPrepayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgPrepay not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_HandleMsgFileUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFileUpload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgFileUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.sds.v1.Msg/HandleMsgFileUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgFileUpload(ctx, req.(*MsgFileUpload))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgPrepay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPrepay)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgPrepay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.sds.v1.Msg/HandleMsgPrepay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgPrepay(ctx, req.(*MsgPrepay))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stratos.sds.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleMsgFileUpload",
			Handler:    _Msg_HandleMsgFileUpload_Handler,
		},
		{
			MethodName: "HandleMsgPrepay",
			Handler:    _Msg_HandleMsgPrepay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stratos/sds/v1/tx.proto",
}

func (m *MsgFileUpload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFileUpload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFileUpload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Uploader) > 0 {
		i -= len(m.Uploader)
		copy(dAtA[i:], m.Uploader)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Uploader)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FileHash) > 0 {
		i -= len(m.FileHash)
		copy(dAtA[i:], m.FileHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FileHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFileUploadResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFileUploadResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFileUploadResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPrepay) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPrepay) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPrepay) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Beneficiary) > 0 {
		i -= len(m.Beneficiary)
		copy(dAtA[i:], m.Beneficiary)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Beneficiary)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPrepayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPrepayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPrepayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgFileUpload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FileHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Uploader)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFileUploadResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPrepay) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Beneficiary)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgPrepayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgFileUpload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFileUpload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFileUpload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uploader", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uploader = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFileUploadResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFileUploadResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFileUploadResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPrepay) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPrepay: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPrepay: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Beneficiary", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Beneficiary = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPrepayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPrepayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPrepayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
