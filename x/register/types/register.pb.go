// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stratos/register/v1/register.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types1 "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	types2 "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Params defines the Register module parameters
type Params struct {
	BondDenom               string        `protobuf:"bytes,1,opt,name=bond_denom,json=bondDenom,proto3" json:"bond_denom" yaml:"bond_denom"`
	UnbondingThreasholdTime time.Duration `protobuf:"bytes,2,opt,name=unbonding_threashold_time,json=unbondingThreasholdTime,proto3,stdduration" json:"unbonding_threashold_time" yaml:"unbonding_threashold_time"`
	UnbondingCompletionTime time.Duration `protobuf:"bytes,3,opt,name=unbonding_completion_time,json=unbondingCompletionTime,proto3,stdduration" json:"unbonding_completion_time" yaml:"unbonding_completion_time"`
	MaxEntries              uint32        `protobuf:"varint,4,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries" yaml:"max_entries",omitempty`
	ResourceNodeRegEnabled  bool          `protobuf:"varint,5,opt,name=resource_node_reg_enabled,json=resourceNodeRegEnabled,proto3" json:"resource_node_reg_enabled" yaml:"resource_node_reg_enabled"`
	ResourceNodeMinDeposit  types.Coin    `protobuf:"bytes,6,opt,name=resource_node_min_deposit,json=resourceNodeMinDeposit,proto3" json:"resource_node_min_deposit" yaml:"resource_node_min_deposit"`
	VotingPeriod            time.Duration `protobuf:"bytes,7,opt,name=voting_period,json=votingPeriod,proto3,stdduration" json:"voting_period" yaml:"voting_period"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetBondDenom() string {
	if m != nil {
		return m.BondDenom
	}
	return ""
}

func (m *Params) GetUnbondingThreasholdTime() time.Duration {
	if m != nil {
		return m.UnbondingThreasholdTime
	}
	return 0
}

func (m *Params) GetUnbondingCompletionTime() time.Duration {
	if m != nil {
		return m.UnbondingCompletionTime
	}
	return 0
}

func (m *Params) GetMaxEntries() uint32 {
	if m != nil {
		return m.MaxEntries
	}
	return 0
}

func (m *Params) GetResourceNodeRegEnabled() bool {
	if m != nil {
		return m.ResourceNodeRegEnabled
	}
	return false
}

func (m *Params) GetResourceNodeMinDeposit() types.Coin {
	if m != nil {
		return m.ResourceNodeMinDeposit
	}
	return types.Coin{}
}

func (m *Params) GetVotingPeriod() time.Duration {
	if m != nil {
		return m.VotingPeriod
	}
	return 0
}

type ResourceNode struct {
	NetworkAddress     string                                 `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	Pubkey             *types1.Any                            `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey" yaml:"pubkey"`
	Suspend            bool                                   `protobuf:"varint,3,opt,name=suspend,proto3" json:"suspend" yaml:"suspend"`
	Status             types2.BondStatus                      `protobuf:"varint,4,opt,name=status,proto3,enum=cosmos.staking.v1beta1.BondStatus" json:"status" yaml:"status"`
	Tokens             github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=tokens,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"tokens" yaml:"tokens"`
	OwnerAddress       string                                 `protobuf:"bytes,6,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	Description        Description                            `protobuf:"bytes,7,opt,name=description,proto3" json:"description" yaml:"description"`
	CreationTime       time.Time                              `protobuf:"bytes,8,opt,name=creation_time,json=creationTime,proto3,stdtime" json:"creation_time" yaml:"creation_time"`
	NodeType           uint32                                 `protobuf:"varint,9,opt,name=node_type,json=nodeType,proto3" json:"node_type" yaml:"node_type"`
	EffectiveTokens    github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,10,opt,name=effective_tokens,json=effectiveTokens,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"effective_tokens" yaml:"effective_tokens"`
	BeneficiaryAddress string                                 `protobuf:"bytes,11,opt,name=beneficiary_address,json=beneficiaryAddress,proto3" json:"beneficiary_address" yaml:"beneficiary_address"`
}

func (m *ResourceNode) Reset()         { *m = ResourceNode{} }
func (m *ResourceNode) String() string { return proto.CompactTextString(m) }
func (*ResourceNode) ProtoMessage()    {}
func (*ResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{1}
}
func (m *ResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceNode.Merge(m, src)
}
func (m *ResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *ResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceNode proto.InternalMessageInfo

func (m *ResourceNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *ResourceNode) GetPubkey() *types1.Any {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *ResourceNode) GetSuspend() bool {
	if m != nil {
		return m.Suspend
	}
	return false
}

func (m *ResourceNode) GetStatus() types2.BondStatus {
	if m != nil {
		return m.Status
	}
	return types2.Unspecified
}

func (m *ResourceNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *ResourceNode) GetDescription() Description {
	if m != nil {
		return m.Description
	}
	return Description{}
}

func (m *ResourceNode) GetCreationTime() time.Time {
	if m != nil {
		return m.CreationTime
	}
	return time.Time{}
}

func (m *ResourceNode) GetNodeType() uint32 {
	if m != nil {
		return m.NodeType
	}
	return 0
}

func (m *ResourceNode) GetBeneficiaryAddress() string {
	if m != nil {
		return m.BeneficiaryAddress
	}
	return ""
}

type MetaNode struct {
	NetworkAddress     string                                 `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	Pubkey             *types1.Any                            `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey" yaml:"pubkey"`
	Suspend            bool                                   `protobuf:"varint,3,opt,name=suspend,proto3" json:"suspend" yaml:"suspend"`
	Status             types2.BondStatus                      `protobuf:"varint,4,opt,name=status,proto3,enum=cosmos.staking.v1beta1.BondStatus" json:"status" yaml:"status"`
	Tokens             github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=tokens,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"tokens" yaml:"tokens"`
	OwnerAddress       string                                 `protobuf:"bytes,6,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	Description        Description                            `protobuf:"bytes,7,opt,name=description,proto3" json:"description" yaml:"description"`
	CreationTime       time.Time                              `protobuf:"bytes,8,opt,name=creation_time,json=creationTime,proto3,stdtime" json:"creation_time" yaml:"creation_time"`
	BeneficiaryAddress string                                 `protobuf:"bytes,9,opt,name=beneficiary_address,json=beneficiaryAddress,proto3" json:"beneficiary_address" yaml:"beneficiary_address"`
}

func (m *MetaNode) Reset()         { *m = MetaNode{} }
func (m *MetaNode) String() string { return proto.CompactTextString(m) }
func (*MetaNode) ProtoMessage()    {}
func (*MetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{2}
}
func (m *MetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaNode.Merge(m, src)
}
func (m *MetaNode) XXX_Size() int {
	return m.Size()
}
func (m *MetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_MetaNode proto.InternalMessageInfo

func (m *MetaNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MetaNode) GetPubkey() *types1.Any {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *MetaNode) GetSuspend() bool {
	if m != nil {
		return m.Suspend
	}
	return false
}

func (m *MetaNode) GetStatus() types2.BondStatus {
	if m != nil {
		return m.Status
	}
	return types2.Unspecified
}

func (m *MetaNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MetaNode) GetDescription() Description {
	if m != nil {
		return m.Description
	}
	return Description{}
}

func (m *MetaNode) GetCreationTime() time.Time {
	if m != nil {
		return m.CreationTime
	}
	return time.Time{}
}

func (m *MetaNode) GetBeneficiaryAddress() string {
	if m != nil {
		return m.BeneficiaryAddress
	}
	return ""
}

type MetaNodeRegistrationVotePool struct {
	NetworkAddress string    `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	ApproveList    []string  `protobuf:"bytes,2,rep,name=approve_list,json=approveList,proto3" json:"approve_list" yaml:"approve_list"`
	RejectList     []string  `protobuf:"bytes,3,rep,name=reject_list,json=rejectList,proto3" json:"reject_list" yaml:"reject_list"`
	ExpireTime     time.Time `protobuf:"bytes,4,opt,name=expire_time,json=expireTime,proto3,stdtime" json:"expire_time" yaml:"expire_time"`
	IsVotePassed   bool      `protobuf:"varint,5,opt,name=is_vote_passed,json=isVotePassed,proto3" json:"is_vote_passed" yaml:"is_vote_passed"`
}

func (m *MetaNodeRegistrationVotePool) Reset()         { *m = MetaNodeRegistrationVotePool{} }
func (m *MetaNodeRegistrationVotePool) String() string { return proto.CompactTextString(m) }
func (*MetaNodeRegistrationVotePool) ProtoMessage()    {}
func (*MetaNodeRegistrationVotePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{3}
}
func (m *MetaNodeRegistrationVotePool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaNodeRegistrationVotePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaNodeRegistrationVotePool.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaNodeRegistrationVotePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaNodeRegistrationVotePool.Merge(m, src)
}
func (m *MetaNodeRegistrationVotePool) XXX_Size() int {
	return m.Size()
}
func (m *MetaNodeRegistrationVotePool) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaNodeRegistrationVotePool.DiscardUnknown(m)
}

var xxx_messageInfo_MetaNodeRegistrationVotePool proto.InternalMessageInfo

func (m *MetaNodeRegistrationVotePool) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MetaNodeRegistrationVotePool) GetApproveList() []string {
	if m != nil {
		return m.ApproveList
	}
	return nil
}

func (m *MetaNodeRegistrationVotePool) GetRejectList() []string {
	if m != nil {
		return m.RejectList
	}
	return nil
}

func (m *MetaNodeRegistrationVotePool) GetExpireTime() time.Time {
	if m != nil {
		return m.ExpireTime
	}
	return time.Time{}
}

func (m *MetaNodeRegistrationVotePool) GetIsVotePassed() bool {
	if m != nil {
		return m.IsVotePassed
	}
	return false
}

type Description struct {
	Moniker         string `protobuf:"bytes,1,opt,name=moniker,proto3" json:"moniker" yaml:"moniker"`
	Identity        string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity" yaml:"identity",omitempty`
	Website         string `protobuf:"bytes,3,opt,name=website,proto3" json:"website" yaml:"website",omitempty`
	SecurityContact string `protobuf:"bytes,4,opt,name=security_contact,json=securityContact,proto3" json:"security_contact" yaml:"security_contact",omitempty`
	Details         string `protobuf:"bytes,5,opt,name=details,proto3" json:"details" yaml:"details",omitempty`
}

func (m *Description) Reset()         { *m = Description{} }
func (m *Description) String() string { return proto.CompactTextString(m) }
func (*Description) ProtoMessage()    {}
func (*Description) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{4}
}
func (m *Description) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Description) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Description.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Description) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Description.Merge(m, src)
}
func (m *Description) XXX_Size() int {
	return m.Size()
}
func (m *Description) XXX_DiscardUnknown() {
	xxx_messageInfo_Description.DiscardUnknown(m)
}

var xxx_messageInfo_Description proto.InternalMessageInfo

func (m *Description) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

func (m *Description) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Description) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Description) GetSecurityContact() string {
	if m != nil {
		return m.SecurityContact
	}
	return ""
}

func (m *Description) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

// UnbondingNode stores all of a single delegator's unbonding bonds
// for a single unbonding node in a time-ordered list
type UnbondingNode struct {
	NetworkAddr string                `protobuf:"bytes,1,opt,name=network_addr,json=networkAddr,proto3" json:"network_addr" yaml:"network_addr"`
	IsMetaNode  bool                  `protobuf:"varint,2,opt,name=is_meta_node,json=isMetaNode,proto3" json:"is_meta_node" yaml:"is_meta_node"`
	Entries     []*UnbondingNodeEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries" yaml:"entries"`
}

func (m *UnbondingNode) Reset()         { *m = UnbondingNode{} }
func (m *UnbondingNode) String() string { return proto.CompactTextString(m) }
func (*UnbondingNode) ProtoMessage()    {}
func (*UnbondingNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{5}
}
func (m *UnbondingNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnbondingNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnbondingNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnbondingNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbondingNode.Merge(m, src)
}
func (m *UnbondingNode) XXX_Size() int {
	return m.Size()
}
func (m *UnbondingNode) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbondingNode.DiscardUnknown(m)
}

var xxx_messageInfo_UnbondingNode proto.InternalMessageInfo

func (m *UnbondingNode) GetNetworkAddr() string {
	if m != nil {
		return m.NetworkAddr
	}
	return ""
}

func (m *UnbondingNode) GetIsMetaNode() bool {
	if m != nil {
		return m.IsMetaNode
	}
	return false
}

func (m *UnbondingNode) GetEntries() []*UnbondingNodeEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type UnbondingNodeEntry struct {
	CreationHeight int64                                   `protobuf:"varint,1,opt,name=creation_height,json=creationHeight,proto3" json:"creation_height" yaml:"creation_height"`
	CompletionTime time.Time                               `protobuf:"bytes,2,opt,name=completion_time,json=completionTime,proto3,stdtime" json:"creation_time" yaml:"creation_time"`
	InitialBalance *github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,3,opt,name=initial_balance,json=initialBalance,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"initial_balance" yaml:"initial_balance"`
	Balance        *github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,4,opt,name=balance,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"balance" yaml:"balance"`
}

func (m *UnbondingNodeEntry) Reset()         { *m = UnbondingNodeEntry{} }
func (m *UnbondingNodeEntry) String() string { return proto.CompactTextString(m) }
func (*UnbondingNodeEntry) ProtoMessage()    {}
func (*UnbondingNodeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fef1e3aeec8499d6, []int{6}
}
func (m *UnbondingNodeEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnbondingNodeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnbondingNodeEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnbondingNodeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbondingNodeEntry.Merge(m, src)
}
func (m *UnbondingNodeEntry) XXX_Size() int {
	return m.Size()
}
func (m *UnbondingNodeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbondingNodeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_UnbondingNodeEntry proto.InternalMessageInfo

func (m *UnbondingNodeEntry) GetCreationHeight() int64 {
	if m != nil {
		return m.CreationHeight
	}
	return 0
}

func (m *UnbondingNodeEntry) GetCompletionTime() time.Time {
	if m != nil {
		return m.CompletionTime
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*Params)(nil), "stratos.register.v1.Params")
	proto.RegisterType((*ResourceNode)(nil), "stratos.register.v1.ResourceNode")
	proto.RegisterType((*MetaNode)(nil), "stratos.register.v1.MetaNode")
	proto.RegisterType((*MetaNodeRegistrationVotePool)(nil), "stratos.register.v1.MetaNodeRegistrationVotePool")
	proto.RegisterType((*Description)(nil), "stratos.register.v1.Description")
	proto.RegisterType((*UnbondingNode)(nil), "stratos.register.v1.UnbondingNode")
	proto.RegisterType((*UnbondingNodeEntry)(nil), "stratos.register.v1.UnbondingNodeEntry")
}

func init() {
	proto.RegisterFile("stratos/register/v1/register.proto", fileDescriptor_fef1e3aeec8499d6)
}

var fileDescriptor_fef1e3aeec8499d6 = []byte{
	// 1588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x4f, 0x6f, 0xdb, 0x46,
	0x16, 0x37, 0xed, 0xac, 0x65, 0x8d, 0xfc, 0x27, 0x61, 0xbc, 0x89, 0xec, 0xcd, 0x6a, 0x1c, 0xee,
	0x9f, 0x38, 0xd9, 0xb5, 0x04, 0x3b, 0x8b, 0x2d, 0x9a, 0x43, 0x0b, 0x33, 0x76, 0xd1, 0xa4, 0x4d,
	0xe0, 0x32, 0x4e, 0x0a, 0x14, 0x05, 0x58, 0x8a, 0x1c, 0xcb, 0x53, 0x8b, 0x33, 0x04, 0x67, 0x24,
	0x5b, 0x68, 0xd1, 0x0f, 0xd0, 0x43, 0x91, 0x63, 0x80, 0xa2, 0x40, 0x2e, 0x05, 0x02, 0xf4, 0x92,
	0x43, 0x6f, 0xfd, 0x02, 0x41, 0x4f, 0x41, 0x4f, 0x45, 0x0f, 0x6c, 0xe1, 0x00, 0x0d, 0xa0, 0xde,
	0xf8, 0x05, 0x5a, 0x90, 0x33, 0x23, 0x52, 0xb4, 0x85, 0x34, 0x05, 0x9a, 0x53, 0x2e, 0x09, 0xe7,
	0xf7, 0x7b, 0x7c, 0xef, 0x71, 0xde, 0xef, 0xbd, 0xd1, 0x18, 0x18, 0x8c, 0x87, 0x0e, 0xa7, 0xac,
	0x11, 0xa2, 0x16, 0x66, 0x1c, 0x85, 0x8d, 0xee, 0xea, 0xe0, 0xb9, 0x1e, 0x84, 0x94, 0x53, 0xfd,
	0xb4, 0xb4, 0xa9, 0x0f, 0xf0, 0xee, 0xea, 0xe2, 0x7c, 0x8b, 0xb6, 0x68, 0xca, 0x37, 0x92, 0x27,
	0x61, 0xba, 0xb8, 0xd0, 0xa2, 0xb4, 0xd5, 0x46, 0x8d, 0x74, 0xd5, 0xec, 0xec, 0x34, 0x1c, 0xd2,
	0x93, 0x14, 0x2c, 0x52, 0x1c, 0xfb, 0x88, 0x71, 0xc7, 0x0f, 0xa4, 0x41, 0xad, 0x68, 0xe0, 0x75,
	0x42, 0x87, 0x63, 0x4a, 0x94, 0x6f, 0x97, 0x32, 0x9f, 0x32, 0x5b, 0x04, 0x15, 0x0b, 0x49, 0x9d,
	0x72, 0x7c, 0x4c, 0x68, 0x23, 0xfd, 0x57, 0x79, 0x13, 0x06, 0x8d, 0xa6, 0xc3, 0x50, 0xa3, 0xbb,
	0xda, 0x44, 0xdc, 0x59, 0x6d, 0xb8, 0x14, 0x2b, 0x6f, 0xff, 0x94, 0x3c, 0xe3, 0xce, 0x1e, 0x26,
	0xad, 0x81, 0x89, 0x5c, 0x0b, 0x2b, 0xe3, 0xab, 0x12, 0x98, 0xdc, 0x72, 0x42, 0xc7, 0x67, 0xba,
	0x09, 0x40, 0x93, 0x12, 0xcf, 0xf6, 0x10, 0xa1, 0x7e, 0x55, 0x5b, 0xd2, 0x96, 0xcb, 0xe6, 0x3f,
	0xfa, 0x11, 0xcc, 0xa1, 0x71, 0x04, 0x4f, 0xf5, 0x1c, 0xbf, 0x7d, 0xc5, 0xc8, 0x30, 0xc3, 0x2a,
	0x27, 0x8b, 0x8d, 0xe4, 0x59, 0xff, 0x52, 0x03, 0x0b, 0x1d, 0x92, 0xac, 0x31, 0x69, 0xd9, 0x7c,
	0x37, 0x44, 0x0e, 0xdb, 0xa5, 0x6d, 0xcf, 0x4e, 0xf6, 0xa2, 0x3a, 0xbe, 0xa4, 0x2d, 0x57, 0xd6,
	0x16, 0xea, 0x62, 0x1f, 0xea, 0x6a, 0x1f, 0xea, 0x1b, 0x72, 0x1f, 0xcc, 0x9b, 0x8f, 0x22, 0x38,
	0xd6, 0x8f, 0xe0, 0x68, 0x1f, 0x71, 0x04, 0x97, 0x44, 0x06, 0x23, 0x4d, 0x8c, 0x7b, 0x3f, 0x42,
	0xed, 0xc1, 0xd3, 0x87, 0x97, 0x34, 0xeb, 0xec, 0xc0, 0x68, 0x7b, 0x60, 0xb3, 0x8d, 0x7d, 0x54,
	0xc8, 0xd3, 0xa5, 0x7e, 0xd0, 0x46, 0x49, 0x06, 0x22, 0xcf, 0x89, 0x3f, 0x90, 0x67, 0xc1, 0xc7,
	0x71, 0x79, 0x16, 0x4c, 0x8e, 0xcd, 0xf3, 0xea, 0xc0, 0x26, 0xcd, 0x73, 0x0b, 0x54, 0x7c, 0xe7,
	0xc0, 0x46, 0x84, 0x87, 0x18, 0xb1, 0xea, 0x89, 0x25, 0x6d, 0x79, 0xc6, 0x6c, 0xf4, 0x23, 0x98,
	0x87, 0xe3, 0x08, 0x9e, 0x13, 0xb1, 0x72, 0xa0, 0xf1, 0x5f, 0xea, 0x63, 0x8e, 0xfc, 0x80, 0xf7,
	0x2c, 0xe0, 0x3b, 0x07, 0x9b, 0x02, 0xd6, 0x3f, 0x06, 0x0b, 0x21, 0x62, 0xb4, 0x13, 0xba, 0xc8,
	0x26, 0xd4, 0x43, 0x76, 0x88, 0x5a, 0x36, 0x22, 0x4e, 0xb3, 0x8d, 0xbc, 0xea, 0x5f, 0x96, 0xb4,
	0xe5, 0x29, 0x73, 0x3d, 0xf9, 0xb2, 0x91, 0x46, 0xd9, 0x97, 0x8d, 0x34, 0x31, 0xac, 0x33, 0x8a,
	0xbb, 0x49, 0x3d, 0x64, 0xa1, 0xd6, 0xa6, 0x20, 0xf4, 0xfb, 0x5a, 0x31, 0xbc, 0x8f, 0x89, 0xed,
	0xa1, 0x80, 0x32, 0xcc, 0xab, 0x93, 0x72, 0xdf, 0xa5, 0xf4, 0x13, 0x65, 0xd7, 0xa5, 0x6c, 0xeb,
	0x57, 0x29, 0x26, 0xe6, 0x75, 0xb5, 0xef, 0x23, 0x7d, 0x8c, 0xca, 0x2e, 0x67, 0x62, 0x88, 0x3d,
	0x1f, 0x4a, 0xf1, 0x06, 0x26, 0x1b, 0x82, 0xd5, 0xbb, 0x60, 0xa6, 0x4b, 0x79, 0x52, 0xaf, 0x00,
	0x85, 0x98, 0x7a, 0xd5, 0xd2, 0xb3, 0xd4, 0xf0, 0x7f, 0x99, 0xd5, 0xf0, 0x7b, 0x71, 0x04, 0xe7,
	0x45, 0x26, 0x43, 0x70, 0xae, 0xea, 0xd3, 0x82, 0xd8, 0x4a, 0xf1, 0x2b, 0xc6, 0xbd, 0xfb, 0x50,
	0xfb, 0xf4, 0xe9, 0xc3, 0x4b, 0x0b, 0x6a, 0x62, 0x1d, 0x64, 0x33, 0x4b, 0xb4, 0xa8, 0xf1, 0x45,
	0x19, 0x4c, 0x5b, 0xb9, 0xb4, 0x75, 0x02, 0xe6, 0x08, 0xe2, 0xfb, 0x34, 0xdc, 0xb3, 0x1d, 0xcf,
	0x0b, 0x11, 0x63, 0xb2, 0x71, 0x37, 0xfb, 0x11, 0x2c, 0x52, 0x71, 0x04, 0xcf, 0x88, 0x8c, 0x0a,
	0x84, 0xf1, 0xdd, 0xd7, 0x2b, 0xf3, 0x72, 0xd3, 0xd7, 0x05, 0x74, 0x8b, 0x87, 0x98, 0xb4, 0xac,
	0x59, 0x69, 0x29, 0x51, 0xdd, 0x01, 0x93, 0x41, 0xa7, 0xb9, 0x87, 0x7a, 0xb2, 0x97, 0xe7, 0x8f,
	0xec, 0xca, 0x3a, 0xe9, 0x99, 0x97, 0xfb, 0x11, 0x94, 0x76, 0x71, 0x04, 0x67, 0x44, 0x4c, 0xb1,
	0x36, 0xbe, 0xcd, 0x42, 0xb9, 0x61, 0x2f, 0xe0, 0xb4, 0xbe, 0xd5, 0x69, 0xbe, 0x85, 0x7a, 0x96,
	0x7c, 0x41, 0x7f, 0x05, 0x94, 0x58, 0x87, 0x05, 0x88, 0x78, 0x69, 0x1f, 0x4e, 0x99, 0x7f, 0xef,
	0x47, 0x50, 0x41, 0x71, 0x04, 0x67, 0x85, 0x3b, 0x09, 0x18, 0x96, 0xa2, 0xf4, 0x77, 0xc1, 0x24,
	0xe3, 0x0e, 0xef, 0x88, 0x36, 0x99, 0x5d, 0x33, 0x94, 0x8e, 0xd4, 0xc4, 0x53, 0x52, 0x32, 0x29,
	0xf1, 0x6e, 0xa5, 0x96, 0xe6, 0xdf, 0x92, 0x4c, 0xc5, 0x5b, 0x59, 0xa6, 0x62, 0x6d, 0x58, 0x92,
	0xd0, 0x39, 0x98, 0xe4, 0x74, 0x0f, 0x11, 0x96, 0xf6, 0x47, 0xd9, 0x7c, 0x3f, 0xa9, 0xf7, 0x0f,
	0x11, 0xfc, 0x77, 0x0b, 0xf3, 0xdd, 0x4e, 0xb3, 0xee, 0x52, 0x5f, 0x4e, 0x6b, 0xf9, 0xdf, 0x0a,
	0xf3, 0xf6, 0x1a, 0xbc, 0x17, 0x20, 0x56, 0xbf, 0x46, 0x78, 0x12, 0x42, 0xbc, 0x9f, 0x85, 0x10,
	0xeb, 0x64, 0xdf, 0x81, 0x4c, 0xf2, 0x1a, 0xe1, 0x42, 0x15, 0xd2, 0x56, 0xdf, 0x01, 0x33, 0x74,
	0x9f, 0xa0, 0x70, 0x50, 0xd8, 0xc9, 0x34, 0x78, 0xd2, 0x9c, 0xc3, 0x44, 0x26, 0xb4, 0x21, 0x78,
	0x74, 0x51, 0xa7, 0x53, 0x3b, 0x55, 0x52, 0x1f, 0x54, 0x3c, 0xc4, 0xdc, 0x10, 0x07, 0x89, 0x98,
	0xa5, 0xda, 0x97, 0xea, 0xc7, 0x1c, 0x89, 0xf5, 0x8d, 0xcc, 0xce, 0xbc, 0x28, 0x45, 0x9f, 0x7f,
	0x39, 0x8e, 0xa0, 0x2e, 0x32, 0xc9, 0x81, 0x86, 0x95, 0x37, 0xd1, 0xf7, 0xc1, 0x8c, 0x1b, 0x22,
	0x27, 0x1b, 0xb6, 0x53, 0x69, 0xc0, 0xc5, 0x23, 0x42, 0xda, 0x56, 0xa7, 0x67, 0xd6, 0x5f, 0x43,
	0x2f, 0x66, 0x9f, 0x3d, 0x04, 0x1b, 0x77, 0xb3, 0xfe, 0x52, 0x44, 0x3a, 0x4a, 0x5f, 0x03, 0xe5,
	0x74, 0x12, 0x24, 0x75, 0xa9, 0x96, 0xd3, 0x41, 0x7a, 0xbe, 0x1f, 0xc1, 0x0c, 0x8c, 0x23, 0x78,
	0x52, 0xb6, 0x87, 0x82, 0x0c, 0x6b, 0x2a, 0x79, 0xde, 0xee, 0x05, 0x48, 0xff, 0x5c, 0x03, 0x27,
	0xd1, 0xce, 0x0e, 0x72, 0x39, 0xee, 0x22, 0x5b, 0x0a, 0x02, 0xa4, 0x35, 0x09, 0x9e, 0x5b, 0x10,
	0x47, 0x3c, 0xc5, 0x11, 0x3c, 0x2b, 0x82, 0x17, 0x99, 0x63, 0x45, 0x32, 0x37, 0xb0, 0xda, 0x16,
	0x6a, 0xf9, 0x04, 0x9c, 0x6e, 0x22, 0x82, 0x76, 0xb0, 0x8b, 0x9d, 0xb0, 0x37, 0xd0, 0x4c, 0x25,
	0xcd, 0xef, 0x46, 0x3f, 0x82, 0xc7, 0xd1, 0x71, 0x04, 0x17, 0xe5, 0x71, 0x7e, 0x94, 0x1c, 0xad,
	0x1f, 0x3d, 0x67, 0x2d, 0x99, 0x2b, 0x27, 0x92, 0xe9, 0x65, 0x7c, 0x53, 0x02, 0x53, 0x37, 0x10,
	0x77, 0x5e, 0xce, 0xa6, 0x97, 0xb3, 0xe9, 0xe5, 0x6c, 0xfa, 0xfd, 0xb3, 0x69, 0x44, 0xf7, 0x96,
	0x5f, 0x6c, 0xf7, 0xfe, 0x3c, 0x01, 0xce, 0xa9, 0xee, 0xb5, 0xd2, 0xad, 0x15, 0x3f, 0x70, 0xee,
	0x50, 0x8e, 0xb6, 0x28, 0x6d, 0xbf, 0xf0, 0x8e, 0xbe, 0x0e, 0xa6, 0x9d, 0x20, 0x08, 0x69, 0x17,
	0xd9, 0x6d, 0xcc, 0x78, 0x75, 0x7c, 0x69, 0x62, 0xb9, 0x6c, 0x5e, 0xe8, 0x47, 0x70, 0x08, 0x8f,
	0x23, 0x78, 0x5a, 0x44, 0xca, 0xa3, 0x86, 0x55, 0x91, 0xcb, 0xb7, 0x31, 0xe3, 0xfa, 0x1b, 0xa0,
	0x12, 0xa2, 0x0f, 0x91, 0xcb, 0x85, 0xab, 0x89, 0xd4, 0xd5, 0xbf, 0x12, 0x91, 0xe4, 0xe0, 0x4c,
	0x24, 0x39, 0xd0, 0xb0, 0x80, 0x58, 0xa5, 0x7e, 0x28, 0xa8, 0xa0, 0x83, 0x00, 0x87, 0x48, 0x28,
	0xe4, 0xc4, 0x33, 0x15, 0xb2, 0xa6, 0xc4, 0x98, 0x7b, 0x2d, 0x8b, 0x93, 0x03, 0x73, 0xea, 0x00,
	0x02, 0x4e, 0xb5, 0xf1, 0x0e, 0x98, 0xc5, 0xcc, 0xee, 0x52, 0x8e, 0xec, 0xc0, 0x61, 0x6c, 0xf0,
	0x2b, 0xfd, 0x3f, 0xfd, 0x08, 0x16, 0x98, 0x38, 0x82, 0x7f, 0x15, 0x6e, 0x87, 0x71, 0xc3, 0x9a,
	0xc6, 0x2c, 0xad, 0xa2, 0x58, 0xfe, 0x3a, 0x0e, 0x2a, 0xb9, 0x7e, 0x49, 0xc6, 0x9a, 0x4f, 0x09,
	0xde, 0x43, 0xa1, 0xac, 0x67, 0x3a, 0xd6, 0x24, 0x94, 0x8d, 0x35, 0x09, 0x18, 0x96, 0xa2, 0xf4,
	0x4d, 0x30, 0x85, 0x3d, 0x44, 0x38, 0xe6, 0x62, 0xe8, 0x96, 0xcd, 0x8b, 0xfd, 0x08, 0x0e, 0xb0,
	0x38, 0x82, 0x0b, 0x32, 0x1f, 0x89, 0xe4, 0x6f, 0x25, 0x03, 0x33, 0x7d, 0x1d, 0x94, 0xf6, 0x51,
	0x93, 0x61, 0x2e, 0xae, 0x5e, 0xa2, 0xc4, 0x0a, 0x8a, 0x23, 0x58, 0x15, 0x4e, 0x24, 0x90, 0xf7,
	0xa1, 0x8c, 0x74, 0x0f, 0x9c, 0x64, 0xc8, 0xed, 0x84, 0x98, 0xf7, 0x6c, 0x97, 0x12, 0xee, 0xb8,
	0x3c, 0xad, 0x4d, 0xd9, 0x7c, 0x35, 0x39, 0x6e, 0x8b, 0x5c, 0x1c, 0xc1, 0xf3, 0x72, 0xa0, 0x16,
	0x98, 0xbc, 0xf7, 0x39, 0x45, 0x5e, 0x15, 0x5c, 0x92, 0xa8, 0x87, 0xb8, 0x83, 0xdb, 0x6a, 0xdc,
	0xa6, 0x89, 0x4a, 0x28, 0x4b, 0x54, 0x02, 0x43, 0x89, 0x4a, 0x4c, 0xb6, 0xda, 0xfd, 0x71, 0x30,
	0x73, 0x5b, 0xdd, 0xf9, 0xd2, 0xd3, 0xb2, 0x09, 0xa6, 0xf3, 0x7d, 0x22, 0x0b, 0xf1, 0x7a, 0xa2,
	0xf5, 0x3c, 0x9e, 0x69, 0x3d, 0x8f, 0x8e, 0x6e, 0xa9, 0x4a, 0xae, 0xa5, 0xf4, 0x6b, 0x60, 0x1a,
	0x33, 0xdb, 0x47, 0xdc, 0x49, 0x2f, 0x45, 0x69, 0xc9, 0xa6, 0x44, 0x3f, 0xe5, 0xf1, 0x2c, 0x46,
	0x1e, 0x35, 0x2c, 0x80, 0xd9, 0xe0, 0x70, 0xff, 0x00, 0x94, 0xd4, 0xa5, 0x34, 0x69, 0xa5, 0xca,
	0xda, 0x85, 0x63, 0xa7, 0xf2, 0xd0, 0x37, 0x26, 0x57, 0xd0, 0x9e, 0xd0, 0x56, 0x76, 0x73, 0x95,
	0xda, 0x52, 0xb7, 0x56, 0x4b, 0x51, 0xc6, 0x2f, 0x13, 0x40, 0x3f, 0xfa, 0xba, 0x7e, 0x07, 0xcc,
	0x0d, 0x66, 0xea, 0x2e, 0xc2, 0xad, 0x5d, 0x9e, 0x6e, 0xd5, 0x84, 0xb9, 0x92, 0xcc, 0xa0, 0x02,
	0x95, 0xcd, 0xa0, 0x02, 0x61, 0x58, 0xb3, 0x0a, 0x79, 0x33, 0x05, 0xf4, 0x8f, 0xc0, 0x5c, 0xf1,
	0xcf, 0x00, 0xe3, 0x7f, 0xda, 0xf4, 0x9f, 0x75, 0x87, 0xaf, 0xf9, 0x9f, 0x69, 0x60, 0x0e, 0x13,
	0xcc, 0xb1, 0xd3, 0xb6, 0x9b, 0x4e, 0xdb, 0x21, 0xae, 0xea, 0x04, 0xf4, 0x5c, 0x67, 0x79, 0xd1,
	0x49, 0xf6, 0xfd, 0x05, 0xa2, 0x70, 0xba, 0x5b, 0xb3, 0x92, 0x37, 0x05, 0xad, 0x53, 0x50, 0x52,
	0x79, 0x88, 0x2e, 0xba, 0xfd, 0x5c, 0x79, 0x94, 0xb2, 0xf8, 0xb2, 0xbe, 0x23, 0xe2, 0x2a, 0x43,
	0xd3, 0x7a, 0x70, 0x58, 0xd3, 0x1e, 0x1d, 0xd6, 0xb4, 0xc7, 0x87, 0x35, 0xed, 0xa7, 0xc3, 0x9a,
	0x76, 0xf7, 0x49, 0x6d, 0xec, 0xf1, 0x93, 0xda, 0xd8, 0xf7, 0x4f, 0x6a, 0x63, 0xef, 0xfd, 0x2f,
	0x17, 0x59, 0xca, 0x8c, 0x20, 0xae, 0x1e, 0x57, 0xdc, 0x5d, 0x07, 0x93, 0xfc, 0x75, 0x39, 0xcd,
	0xa5, 0x39, 0x99, 0x56, 0xec, 0xf2, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x26, 0xce, 0xe7, 0x63,
	0x03, 0x14, 0x00, 0x00,
}

func (this *Params) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Params)
	if !ok {
		that2, ok := that.(Params)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BondDenom != that1.BondDenom {
		return false
	}
	if this.UnbondingThreasholdTime != that1.UnbondingThreasholdTime {
		return false
	}
	if this.UnbondingCompletionTime != that1.UnbondingCompletionTime {
		return false
	}
	if this.MaxEntries != that1.MaxEntries {
		return false
	}
	if this.ResourceNodeRegEnabled != that1.ResourceNodeRegEnabled {
		return false
	}
	if !this.ResourceNodeMinDeposit.Equal(&that1.ResourceNodeMinDeposit) {
		return false
	}
	if this.VotingPeriod != that1.VotingPeriod {
		return false
	}
	return true
}
func (this *ResourceNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ResourceNode)
	if !ok {
		that2, ok := that.(ResourceNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if !this.Pubkey.Equal(that1.Pubkey) {
		return false
	}
	if this.Suspend != that1.Suspend {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if !this.Tokens.Equal(that1.Tokens) {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if !this.Description.Equal(&that1.Description) {
		return false
	}
	if !this.CreationTime.Equal(that1.CreationTime) {
		return false
	}
	if this.NodeType != that1.NodeType {
		return false
	}
	if !this.EffectiveTokens.Equal(that1.EffectiveTokens) {
		return false
	}
	if this.BeneficiaryAddress != that1.BeneficiaryAddress {
		return false
	}
	return true
}
func (this *MetaNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MetaNode)
	if !ok {
		that2, ok := that.(MetaNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if !this.Pubkey.Equal(that1.Pubkey) {
		return false
	}
	if this.Suspend != that1.Suspend {
		return false
	}
	if this.Status != that1.Status {
		return false
	}
	if !this.Tokens.Equal(that1.Tokens) {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if !this.Description.Equal(&that1.Description) {
		return false
	}
	if !this.CreationTime.Equal(that1.CreationTime) {
		return false
	}
	if this.BeneficiaryAddress != that1.BeneficiaryAddress {
		return false
	}
	return true
}
func (this *MetaNodeRegistrationVotePool) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MetaNodeRegistrationVotePool)
	if !ok {
		that2, ok := that.(MetaNodeRegistrationVotePool)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if len(this.ApproveList) != len(that1.ApproveList) {
		return false
	}
	for i := range this.ApproveList {
		if this.ApproveList[i] != that1.ApproveList[i] {
			return false
		}
	}
	if len(this.RejectList) != len(that1.RejectList) {
		return false
	}
	for i := range this.RejectList {
		if this.RejectList[i] != that1.RejectList[i] {
			return false
		}
	}
	if !this.ExpireTime.Equal(that1.ExpireTime) {
		return false
	}
	if this.IsVotePassed != that1.IsVotePassed {
		return false
	}
	return true
}
func (this *Description) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Description)
	if !ok {
		that2, ok := that.(Description)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Moniker != that1.Moniker {
		return false
	}
	if this.Identity != that1.Identity {
		return false
	}
	if this.Website != that1.Website {
		return false
	}
	if this.SecurityContact != that1.SecurityContact {
		return false
	}
	if this.Details != that1.Details {
		return false
	}
	return true
}
func (this *UnbondingNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UnbondingNode)
	if !ok {
		that2, ok := that.(UnbondingNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddr != that1.NetworkAddr {
		return false
	}
	if this.IsMetaNode != that1.IsMetaNode {
		return false
	}
	if len(this.Entries) != len(that1.Entries) {
		return false
	}
	for i := range this.Entries {
		if !this.Entries[i].Equal(that1.Entries[i]) {
			return false
		}
	}
	return true
}
func (this *UnbondingNodeEntry) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UnbondingNodeEntry)
	if !ok {
		that2, ok := that.(UnbondingNodeEntry)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CreationHeight != that1.CreationHeight {
		return false
	}
	if !this.CompletionTime.Equal(that1.CompletionTime) {
		return false
	}
	if that1.InitialBalance == nil {
		if this.InitialBalance != nil {
			return false
		}
	} else if !this.InitialBalance.Equal(*that1.InitialBalance) {
		return false
	}
	if that1.Balance == nil {
		if this.Balance != nil {
			return false
		}
	} else if !this.Balance.Equal(*that1.Balance) {
		return false
	}
	return true
}
func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.VotingPeriod, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.VotingPeriod):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintRegister(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x3a
	{
		size, err := m.ResourceNodeMinDeposit.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRegister(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if m.ResourceNodeRegEnabled {
		i--
		if m.ResourceNodeRegEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.MaxEntries != 0 {
		i = encodeVarintRegister(dAtA, i, uint64(m.MaxEntries))
		i--
		dAtA[i] = 0x20
	}
	n3, err3 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.UnbondingCompletionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.UnbondingCompletionTime):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintRegister(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x1a
	n4, err4 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.UnbondingThreasholdTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.UnbondingThreasholdTime):])
	if err4 != nil {
		return 0, err4
	}
	i -= n4
	i = encodeVarintRegister(dAtA, i, uint64(n4))
	i--
	dAtA[i] = 0x12
	if len(m.BondDenom) > 0 {
		i -= len(m.BondDenom)
		copy(dAtA[i:], m.BondDenom)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.BondDenom)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BeneficiaryAddress) > 0 {
		i -= len(m.BeneficiaryAddress)
		copy(dAtA[i:], m.BeneficiaryAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.BeneficiaryAddress)))
		i--
		dAtA[i] = 0x5a
	}
	{
		size := m.EffectiveTokens.Size()
		i -= size
		if _, err := m.EffectiveTokens.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintRegister(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x52
	if m.NodeType != 0 {
		i = encodeVarintRegister(dAtA, i, uint64(m.NodeType))
		i--
		dAtA[i] = 0x48
	}
	n5, err5 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CreationTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreationTime):])
	if err5 != nil {
		return 0, err5
	}
	i -= n5
	i = encodeVarintRegister(dAtA, i, uint64(n5))
	i--
	dAtA[i] = 0x42
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRegister(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x32
	}
	{
		size := m.Tokens.Size()
		i -= size
		if _, err := m.Tokens.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintRegister(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.Status != 0 {
		i = encodeVarintRegister(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if m.Suspend {
		i--
		if m.Suspend {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRegister(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BeneficiaryAddress) > 0 {
		i -= len(m.BeneficiaryAddress)
		copy(dAtA[i:], m.BeneficiaryAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.BeneficiaryAddress)))
		i--
		dAtA[i] = 0x4a
	}
	n8, err8 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CreationTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreationTime):])
	if err8 != nil {
		return 0, err8
	}
	i -= n8
	i = encodeVarintRegister(dAtA, i, uint64(n8))
	i--
	dAtA[i] = 0x42
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRegister(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x32
	}
	{
		size := m.Tokens.Size()
		i -= size
		if _, err := m.Tokens.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintRegister(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.Status != 0 {
		i = encodeVarintRegister(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if m.Suspend {
		i--
		if m.Suspend {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRegister(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaNodeRegistrationVotePool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaNodeRegistrationVotePool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaNodeRegistrationVotePool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsVotePassed {
		i--
		if m.IsVotePassed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	n11, err11 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.ExpireTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.ExpireTime):])
	if err11 != nil {
		return 0, err11
	}
	i -= n11
	i = encodeVarintRegister(dAtA, i, uint64(n11))
	i--
	dAtA[i] = 0x22
	if len(m.RejectList) > 0 {
		for iNdEx := len(m.RejectList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RejectList[iNdEx])
			copy(dAtA[i:], m.RejectList[iNdEx])
			i = encodeVarintRegister(dAtA, i, uint64(len(m.RejectList[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ApproveList) > 0 {
		for iNdEx := len(m.ApproveList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ApproveList[iNdEx])
			copy(dAtA[i:], m.ApproveList[iNdEx])
			i = encodeVarintRegister(dAtA, i, uint64(len(m.ApproveList[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Description) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Description) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Description) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Details) > 0 {
		i -= len(m.Details)
		copy(dAtA[i:], m.Details)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.Details)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SecurityContact) > 0 {
		i -= len(m.SecurityContact)
		copy(dAtA[i:], m.SecurityContact)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.SecurityContact)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Identity) > 0 {
		i -= len(m.Identity)
		copy(dAtA[i:], m.Identity)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.Identity)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnbondingNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnbondingNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnbondingNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRegister(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.IsMetaNode {
		i--
		if m.IsMetaNode {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.NetworkAddr) > 0 {
		i -= len(m.NetworkAddr)
		copy(dAtA[i:], m.NetworkAddr)
		i = encodeVarintRegister(dAtA, i, uint64(len(m.NetworkAddr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnbondingNodeEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnbondingNodeEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnbondingNodeEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Balance != nil {
		{
			size := m.Balance.Size()
			i -= size
			if _, err := m.Balance.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintRegister(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.InitialBalance != nil {
		{
			size := m.InitialBalance.Size()
			i -= size
			if _, err := m.InitialBalance.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintRegister(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	n12, err12 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CompletionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime):])
	if err12 != nil {
		return 0, err12
	}
	i -= n12
	i = encodeVarintRegister(dAtA, i, uint64(n12))
	i--
	dAtA[i] = 0x12
	if m.CreationHeight != 0 {
		i = encodeVarintRegister(dAtA, i, uint64(m.CreationHeight))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRegister(dAtA []byte, offset int, v uint64) int {
	offset -= sovRegister(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BondDenom)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.UnbondingThreasholdTime)
	n += 1 + l + sovRegister(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.UnbondingCompletionTime)
	n += 1 + l + sovRegister(uint64(l))
	if m.MaxEntries != 0 {
		n += 1 + sovRegister(uint64(m.MaxEntries))
	}
	if m.ResourceNodeRegEnabled {
		n += 2
	}
	l = m.ResourceNodeMinDeposit.Size()
	n += 1 + l + sovRegister(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.VotingPeriod)
	n += 1 + l + sovRegister(uint64(l))
	return n
}

func (m *ResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovRegister(uint64(l))
	}
	if m.Suspend {
		n += 2
	}
	if m.Status != 0 {
		n += 1 + sovRegister(uint64(m.Status))
	}
	l = m.Tokens.Size()
	n += 1 + l + sovRegister(uint64(l))
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = m.Description.Size()
	n += 1 + l + sovRegister(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreationTime)
	n += 1 + l + sovRegister(uint64(l))
	if m.NodeType != 0 {
		n += 1 + sovRegister(uint64(m.NodeType))
	}
	l = m.EffectiveTokens.Size()
	n += 1 + l + sovRegister(uint64(l))
	l = len(m.BeneficiaryAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	return n
}

func (m *MetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovRegister(uint64(l))
	}
	if m.Suspend {
		n += 2
	}
	if m.Status != 0 {
		n += 1 + sovRegister(uint64(m.Status))
	}
	l = m.Tokens.Size()
	n += 1 + l + sovRegister(uint64(l))
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = m.Description.Size()
	n += 1 + l + sovRegister(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreationTime)
	n += 1 + l + sovRegister(uint64(l))
	l = len(m.BeneficiaryAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	return n
}

func (m *MetaNodeRegistrationVotePool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	if len(m.ApproveList) > 0 {
		for _, s := range m.ApproveList {
			l = len(s)
			n += 1 + l + sovRegister(uint64(l))
		}
	}
	if len(m.RejectList) > 0 {
		for _, s := range m.RejectList {
			l = len(s)
			n += 1 + l + sovRegister(uint64(l))
		}
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.ExpireTime)
	n += 1 + l + sovRegister(uint64(l))
	if m.IsVotePassed {
		n += 2
	}
	return n
}

func (m *Description) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = len(m.Identity)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = len(m.SecurityContact)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	l = len(m.Details)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	return n
}

func (m *UnbondingNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddr)
	if l > 0 {
		n += 1 + l + sovRegister(uint64(l))
	}
	if m.IsMetaNode {
		n += 2
	}
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovRegister(uint64(l))
		}
	}
	return n
}

func (m *UnbondingNodeEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreationHeight != 0 {
		n += 1 + sovRegister(uint64(m.CreationHeight))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime)
	n += 1 + l + sovRegister(uint64(l))
	if m.InitialBalance != nil {
		l = m.InitialBalance.Size()
		n += 1 + l + sovRegister(uint64(l))
	}
	if m.Balance != nil {
		l = m.Balance.Size()
		n += 1 + l + sovRegister(uint64(l))
	}
	return n
}

func sovRegister(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRegister(x uint64) (n int) {
	return sovRegister(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BondDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BondDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingThreasholdTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.UnbondingThreasholdTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingCompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.UnbondingCompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxEntries", wireType)
			}
			m.MaxEntries = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxEntries |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceNodeRegEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ResourceNodeRegEnabled = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceNodeMinDeposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ResourceNodeMinDeposit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotingPeriod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.VotingPeriod, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types1.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suspend", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Suspend = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= types2.BondStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tokens", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Tokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CreationTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeType", wireType)
			}
			m.NodeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodeType |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveTokens", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EffectiveTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeneficiaryAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BeneficiaryAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types1.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suspend", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Suspend = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= types2.BondStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tokens", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Tokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CreationTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeneficiaryAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BeneficiaryAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaNodeRegistrationVotePool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaNodeRegistrationVotePool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaNodeRegistrationVotePool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApproveList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApproveList = append(m.ApproveList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RejectList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RejectList = append(m.RejectList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.ExpireTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsVotePassed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsVotePassed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Description) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Description: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Description: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Identity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecurityContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Details = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnbondingNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnbondingNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnbondingNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMetaNode", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMetaNode = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &UnbondingNodeEntry{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnbondingNodeEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnbondingNodeEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnbondingNodeEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationHeight", wireType)
			}
			m.CreationHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreationHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialBalance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_cosmos_cosmos_sdk_types.Int
			m.InitialBalance = &v
			if err := m.InitialBalance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Balance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegister
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegister
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_cosmos_cosmos_sdk_types.Int
			m.Balance = &v
			if err := m.Balance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegister(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRegister
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRegister(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRegister
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRegister
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRegister
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRegister
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRegister
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRegister        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRegister          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRegister = fmt.Errorf("proto: unexpected end of group")
)
