// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stratos/register/v1/event.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// EventCreateResourceNode is emitted on Msg/MsgCreateResourceNode
type EventCreateResourceNode struct {
	Sender            string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NetworkAddress    string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	Pubkey            string `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	OzoneLimitChanges string `protobuf:"bytes,4,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	InitialDeposit    string `protobuf:"bytes,5,opt,name=initial_deposit,json=initialDeposit,proto3" json:"initial_deposit,omitempty"`
}

func (m *EventCreateResourceNode) Reset()         { *m = EventCreateResourceNode{} }
func (m *EventCreateResourceNode) String() string { return proto.CompactTextString(m) }
func (*EventCreateResourceNode) ProtoMessage()    {}
func (*EventCreateResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{0}
}
func (m *EventCreateResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventCreateResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventCreateResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventCreateResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCreateResourceNode.Merge(m, src)
}
func (m *EventCreateResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *EventCreateResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCreateResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventCreateResourceNode proto.InternalMessageInfo

func (m *EventCreateResourceNode) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventCreateResourceNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *EventCreateResourceNode) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *EventCreateResourceNode) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

func (m *EventCreateResourceNode) GetInitialDeposit() string {
	if m != nil {
		return m.InitialDeposit
	}
	return ""
}

// EventCreateMetaNode is emitted on Msg/MsgCreateMetaNode
type EventCreateMetaNode struct {
	Sender         string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NetworkAddress string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
}

func (m *EventCreateMetaNode) Reset()         { *m = EventCreateMetaNode{} }
func (m *EventCreateMetaNode) String() string { return proto.CompactTextString(m) }
func (*EventCreateMetaNode) ProtoMessage()    {}
func (*EventCreateMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{1}
}
func (m *EventCreateMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventCreateMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventCreateMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventCreateMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCreateMetaNode.Merge(m, src)
}
func (m *EventCreateMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *EventCreateMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCreateMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventCreateMetaNode proto.InternalMessageInfo

func (m *EventCreateMetaNode) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventCreateMetaNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

// EventUnBondingResourceNode is emitted on Msg/MsgRemoveResourceNode
type EventUnBondingResourceNode struct {
	Sender              string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ResourceNode        string `protobuf:"bytes,2,opt,name=resource_node,json=resourceNode,proto3" json:"resource_node,omitempty"`
	DepositToRemove     string `protobuf:"bytes,3,opt,name=deposit_to_remove,json=depositToRemove,proto3" json:"deposit_to_remove,omitempty"`
	UnbondingMatureTime string `protobuf:"bytes,4,opt,name=unbonding_mature_time,json=unbondingMatureTime,proto3" json:"unbonding_mature_time,omitempty"`
}

func (m *EventUnBondingResourceNode) Reset()         { *m = EventUnBondingResourceNode{} }
func (m *EventUnBondingResourceNode) String() string { return proto.CompactTextString(m) }
func (*EventUnBondingResourceNode) ProtoMessage()    {}
func (*EventUnBondingResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{2}
}
func (m *EventUnBondingResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUnBondingResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUnBondingResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUnBondingResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUnBondingResourceNode.Merge(m, src)
}
func (m *EventUnBondingResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *EventUnBondingResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUnBondingResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventUnBondingResourceNode proto.InternalMessageInfo

func (m *EventUnBondingResourceNode) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventUnBondingResourceNode) GetResourceNode() string {
	if m != nil {
		return m.ResourceNode
	}
	return ""
}

func (m *EventUnBondingResourceNode) GetDepositToRemove() string {
	if m != nil {
		return m.DepositToRemove
	}
	return ""
}

func (m *EventUnBondingResourceNode) GetUnbondingMatureTime() string {
	if m != nil {
		return m.UnbondingMatureTime
	}
	return ""
}

// EventUnBondingResourceNode is emitted on Msg/MsgRemoveMetaNode
type EventUnBondingMetaNode struct {
	Sender              string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	MetaNode            string `protobuf:"bytes,2,opt,name=meta_node,json=metaNode,proto3" json:"meta_node,omitempty"`
	OzoneLimitChanges   string `protobuf:"bytes,3,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	DepositToRemove     string `protobuf:"bytes,4,opt,name=deposit_to_remove,json=depositToRemove,proto3" json:"deposit_to_remove,omitempty"`
	UnbondingMatureTime string `protobuf:"bytes,5,opt,name=unbonding_mature_time,json=unbondingMatureTime,proto3" json:"unbonding_mature_time,omitempty"`
}

func (m *EventUnBondingMetaNode) Reset()         { *m = EventUnBondingMetaNode{} }
func (m *EventUnBondingMetaNode) String() string { return proto.CompactTextString(m) }
func (*EventUnBondingMetaNode) ProtoMessage()    {}
func (*EventUnBondingMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{3}
}
func (m *EventUnBondingMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUnBondingMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUnBondingMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUnBondingMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUnBondingMetaNode.Merge(m, src)
}
func (m *EventUnBondingMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *EventUnBondingMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUnBondingMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventUnBondingMetaNode proto.InternalMessageInfo

func (m *EventUnBondingMetaNode) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventUnBondingMetaNode) GetMetaNode() string {
	if m != nil {
		return m.MetaNode
	}
	return ""
}

func (m *EventUnBondingMetaNode) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

func (m *EventUnBondingMetaNode) GetDepositToRemove() string {
	if m != nil {
		return m.DepositToRemove
	}
	return ""
}

func (m *EventUnBondingMetaNode) GetUnbondingMatureTime() string {
	if m != nil {
		return m.UnbondingMatureTime
	}
	return ""
}

// EventMetaNodeRegistrationVote is emitted on Msg/MsgMetaNodeRegistrationVote
type EventMetaNodeRegistrationVote struct {
	Sender                  string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	VoterNetworkAddress     string `protobuf:"bytes,2,opt,name=voter_network_address,json=voterNetworkAddress,proto3" json:"voter_network_address,omitempty"`
	CandidateNetworkAddress string `protobuf:"bytes,3,opt,name=candidate_network_address,json=candidateNetworkAddress,proto3" json:"candidate_network_address,omitempty"`
	CandidateStatus         string `protobuf:"bytes,4,opt,name=candidate_status,json=candidateStatus,proto3" json:"candidate_status,omitempty"`
	OzoneLimitChanges       string `protobuf:"bytes,5,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
}

func (m *EventMetaNodeRegistrationVote) Reset()         { *m = EventMetaNodeRegistrationVote{} }
func (m *EventMetaNodeRegistrationVote) String() string { return proto.CompactTextString(m) }
func (*EventMetaNodeRegistrationVote) ProtoMessage()    {}
func (*EventMetaNodeRegistrationVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{4}
}
func (m *EventMetaNodeRegistrationVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventMetaNodeRegistrationVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventMetaNodeRegistrationVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventMetaNodeRegistrationVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMetaNodeRegistrationVote.Merge(m, src)
}
func (m *EventMetaNodeRegistrationVote) XXX_Size() int {
	return m.Size()
}
func (m *EventMetaNodeRegistrationVote) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMetaNodeRegistrationVote.DiscardUnknown(m)
}

var xxx_messageInfo_EventMetaNodeRegistrationVote proto.InternalMessageInfo

func (m *EventMetaNodeRegistrationVote) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventMetaNodeRegistrationVote) GetVoterNetworkAddress() string {
	if m != nil {
		return m.VoterNetworkAddress
	}
	return ""
}

func (m *EventMetaNodeRegistrationVote) GetCandidateNetworkAddress() string {
	if m != nil {
		return m.CandidateNetworkAddress
	}
	return ""
}

func (m *EventMetaNodeRegistrationVote) GetCandidateStatus() string {
	if m != nil {
		return m.CandidateStatus
	}
	return ""
}

func (m *EventMetaNodeRegistrationVote) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

type EventKickMetaNodeVote struct {
	Sender               string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	VoterNetworkAddress  string `protobuf:"bytes,2,opt,name=voter_network_address,json=voterNetworkAddress,proto3" json:"voter_network_address,omitempty"`
	TargetNetworkAddress string `protobuf:"bytes,3,opt,name=target_network_address,json=targetNetworkAddress,proto3" json:"target_network_address,omitempty"`
	TargetStatus         string `protobuf:"bytes,4,opt,name=target_status,json=targetStatus,proto3" json:"target_status,omitempty"`
}

func (m *EventKickMetaNodeVote) Reset()         { *m = EventKickMetaNodeVote{} }
func (m *EventKickMetaNodeVote) String() string { return proto.CompactTextString(m) }
func (*EventKickMetaNodeVote) ProtoMessage()    {}
func (*EventKickMetaNodeVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{5}
}
func (m *EventKickMetaNodeVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventKickMetaNodeVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventKickMetaNodeVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventKickMetaNodeVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventKickMetaNodeVote.Merge(m, src)
}
func (m *EventKickMetaNodeVote) XXX_Size() int {
	return m.Size()
}
func (m *EventKickMetaNodeVote) XXX_DiscardUnknown() {
	xxx_messageInfo_EventKickMetaNodeVote.DiscardUnknown(m)
}

var xxx_messageInfo_EventKickMetaNodeVote proto.InternalMessageInfo

func (m *EventKickMetaNodeVote) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventKickMetaNodeVote) GetVoterNetworkAddress() string {
	if m != nil {
		return m.VoterNetworkAddress
	}
	return ""
}

func (m *EventKickMetaNodeVote) GetTargetNetworkAddress() string {
	if m != nil {
		return m.TargetNetworkAddress
	}
	return ""
}

func (m *EventKickMetaNodeVote) GetTargetStatus() string {
	if m != nil {
		return m.TargetStatus
	}
	return ""
}

// EventUpdateResourceNode is emitted on Msg/MsgUpdateResourceNode
type EventUpdateResourceNode struct {
	Sender             string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NetworkAddress     string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	BeneficiaryAddress string `protobuf:"bytes,3,opt,name=beneficiary_address,json=beneficiaryAddress,proto3" json:"beneficiary_address,omitempty"`
}

func (m *EventUpdateResourceNode) Reset()         { *m = EventUpdateResourceNode{} }
func (m *EventUpdateResourceNode) String() string { return proto.CompactTextString(m) }
func (*EventUpdateResourceNode) ProtoMessage()    {}
func (*EventUpdateResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{6}
}
func (m *EventUpdateResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUpdateResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUpdateResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUpdateResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdateResourceNode.Merge(m, src)
}
func (m *EventUpdateResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *EventUpdateResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdateResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdateResourceNode proto.InternalMessageInfo

func (m *EventUpdateResourceNode) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventUpdateResourceNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *EventUpdateResourceNode) GetBeneficiaryAddress() string {
	if m != nil {
		return m.BeneficiaryAddress
	}
	return ""
}

// EventUpdateResourceNodeDeposit is emitted on Msg/MsgUpdateResourceNodeDeposit
type EventUpdateResourceNodeDeposit struct {
	Sender               string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NetworkAddress       string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	DepositDelta         string `protobuf:"bytes,3,opt,name=deposit_delta,json=depositDelta,proto3" json:"deposit_delta,omitempty"`
	CurrentDeposit       string `protobuf:"bytes,4,opt,name=current_deposit,json=currentDeposit,proto3" json:"current_deposit,omitempty"`
	AvailableTokenBefore string `protobuf:"bytes,5,opt,name=available_token_before,json=availableTokenBefore,proto3" json:"available_token_before,omitempty"`
	AvailableTokenAfter  string `protobuf:"bytes,6,opt,name=available_token_after,json=availableTokenAfter,proto3" json:"available_token_after,omitempty"`
	OzoneLimitChanges    string `protobuf:"bytes,7,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	UnbondingMatureTime  string `protobuf:"bytes,8,opt,name=unbonding_mature_time,json=unbondingMatureTime,proto3" json:"unbonding_mature_time,omitempty"`
}

func (m *EventUpdateResourceNodeDeposit) Reset()         { *m = EventUpdateResourceNodeDeposit{} }
func (m *EventUpdateResourceNodeDeposit) String() string { return proto.CompactTextString(m) }
func (*EventUpdateResourceNodeDeposit) ProtoMessage()    {}
func (*EventUpdateResourceNodeDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{7}
}
func (m *EventUpdateResourceNodeDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUpdateResourceNodeDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUpdateResourceNodeDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUpdateResourceNodeDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdateResourceNodeDeposit.Merge(m, src)
}
func (m *EventUpdateResourceNodeDeposit) XXX_Size() int {
	return m.Size()
}
func (m *EventUpdateResourceNodeDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdateResourceNodeDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdateResourceNodeDeposit proto.InternalMessageInfo

func (m *EventUpdateResourceNodeDeposit) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetDepositDelta() string {
	if m != nil {
		return m.DepositDelta
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetCurrentDeposit() string {
	if m != nil {
		return m.CurrentDeposit
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetAvailableTokenBefore() string {
	if m != nil {
		return m.AvailableTokenBefore
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetAvailableTokenAfter() string {
	if m != nil {
		return m.AvailableTokenAfter
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

func (m *EventUpdateResourceNodeDeposit) GetUnbondingMatureTime() string {
	if m != nil {
		return m.UnbondingMatureTime
	}
	return ""
}

// EventUpdateEffectiveDeposit is emitted on Msg/MsgUpdateEffectiveDeposit
type EventUpdateEffectiveDeposit struct {
	NetworkAddress        string `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	EffectiveDepositAfter string `protobuf:"bytes,2,opt,name=effective_deposit_after,json=effectiveDepositAfter,proto3" json:"effective_deposit_after,omitempty"`
	IsUnsuspended         string `protobuf:"bytes,3,opt,name=is_unsuspended,json=isUnsuspended,proto3" json:"is_unsuspended,omitempty"`
}

func (m *EventUpdateEffectiveDeposit) Reset()         { *m = EventUpdateEffectiveDeposit{} }
func (m *EventUpdateEffectiveDeposit) String() string { return proto.CompactTextString(m) }
func (*EventUpdateEffectiveDeposit) ProtoMessage()    {}
func (*EventUpdateEffectiveDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{8}
}
func (m *EventUpdateEffectiveDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUpdateEffectiveDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUpdateEffectiveDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUpdateEffectiveDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdateEffectiveDeposit.Merge(m, src)
}
func (m *EventUpdateEffectiveDeposit) XXX_Size() int {
	return m.Size()
}
func (m *EventUpdateEffectiveDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdateEffectiveDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdateEffectiveDeposit proto.InternalMessageInfo

func (m *EventUpdateEffectiveDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *EventUpdateEffectiveDeposit) GetEffectiveDepositAfter() string {
	if m != nil {
		return m.EffectiveDepositAfter
	}
	return ""
}

func (m *EventUpdateEffectiveDeposit) GetIsUnsuspended() string {
	if m != nil {
		return m.IsUnsuspended
	}
	return ""
}

// EventUpdateMetaNode is emitted on Msg/MsgUpdateMetaNode
type EventUpdateMetaNode struct {
	Sender         string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NetworkAddress string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
}

func (m *EventUpdateMetaNode) Reset()         { *m = EventUpdateMetaNode{} }
func (m *EventUpdateMetaNode) String() string { return proto.CompactTextString(m) }
func (*EventUpdateMetaNode) ProtoMessage()    {}
func (*EventUpdateMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{9}
}
func (m *EventUpdateMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUpdateMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUpdateMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUpdateMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdateMetaNode.Merge(m, src)
}
func (m *EventUpdateMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *EventUpdateMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdateMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdateMetaNode proto.InternalMessageInfo

func (m *EventUpdateMetaNode) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventUpdateMetaNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

// EventUpdateMetaNodeDeposit is emitted on Msg/MsgUpdateMetaNodeDeposit
type EventUpdateMetaNodeDeposit struct {
	Sender               string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NetworkAddress       string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	DepositDelta         string `protobuf:"bytes,3,opt,name=deposit_delta,json=depositDelta,proto3" json:"deposit_delta,omitempty"`
	CurrentDeposit       string `protobuf:"bytes,4,opt,name=current_deposit,json=currentDeposit,proto3" json:"current_deposit,omitempty"`
	AvailableTokenBefore string `protobuf:"bytes,5,opt,name=available_token_before,json=availableTokenBefore,proto3" json:"available_token_before,omitempty"`
	AvailableTokenAfter  string `protobuf:"bytes,6,opt,name=available_token_after,json=availableTokenAfter,proto3" json:"available_token_after,omitempty"`
	OzoneLimitChanges    string `protobuf:"bytes,7,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	UnbondingMatureTime  string `protobuf:"bytes,8,opt,name=unbonding_mature_time,json=unbondingMatureTime,proto3" json:"unbonding_mature_time,omitempty"`
}

func (m *EventUpdateMetaNodeDeposit) Reset()         { *m = EventUpdateMetaNodeDeposit{} }
func (m *EventUpdateMetaNodeDeposit) String() string { return proto.CompactTextString(m) }
func (*EventUpdateMetaNodeDeposit) ProtoMessage()    {}
func (*EventUpdateMetaNodeDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{10}
}
func (m *EventUpdateMetaNodeDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventUpdateMetaNodeDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventUpdateMetaNodeDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventUpdateMetaNodeDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUpdateMetaNodeDeposit.Merge(m, src)
}
func (m *EventUpdateMetaNodeDeposit) XXX_Size() int {
	return m.Size()
}
func (m *EventUpdateMetaNodeDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUpdateMetaNodeDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_EventUpdateMetaNodeDeposit proto.InternalMessageInfo

func (m *EventUpdateMetaNodeDeposit) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetDepositDelta() string {
	if m != nil {
		return m.DepositDelta
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetCurrentDeposit() string {
	if m != nil {
		return m.CurrentDeposit
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetAvailableTokenBefore() string {
	if m != nil {
		return m.AvailableTokenBefore
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetAvailableTokenAfter() string {
	if m != nil {
		return m.AvailableTokenAfter
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

func (m *EventUpdateMetaNodeDeposit) GetUnbondingMatureTime() string {
	if m != nil {
		return m.UnbondingMatureTime
	}
	return ""
}

// EventCompleteUnBondingResourceNode is emitted on EndBlocker
type EventCompleteUnBondingResourceNode struct {
	Amount         string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	NetworkAddress string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
}

func (m *EventCompleteUnBondingResourceNode) Reset()         { *m = EventCompleteUnBondingResourceNode{} }
func (m *EventCompleteUnBondingResourceNode) String() string { return proto.CompactTextString(m) }
func (*EventCompleteUnBondingResourceNode) ProtoMessage()    {}
func (*EventCompleteUnBondingResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{11}
}
func (m *EventCompleteUnBondingResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventCompleteUnBondingResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventCompleteUnBondingResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventCompleteUnBondingResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCompleteUnBondingResourceNode.Merge(m, src)
}
func (m *EventCompleteUnBondingResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *EventCompleteUnBondingResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCompleteUnBondingResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventCompleteUnBondingResourceNode proto.InternalMessageInfo

func (m *EventCompleteUnBondingResourceNode) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *EventCompleteUnBondingResourceNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

// EventCompleteUnBondingMetaNode is emitted on EndBlocker
type EventCompleteUnBondingMetaNode struct {
	Amount         string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	NetworkAddress string `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
}

func (m *EventCompleteUnBondingMetaNode) Reset()         { *m = EventCompleteUnBondingMetaNode{} }
func (m *EventCompleteUnBondingMetaNode) String() string { return proto.CompactTextString(m) }
func (*EventCompleteUnBondingMetaNode) ProtoMessage()    {}
func (*EventCompleteUnBondingMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f4bedab5b811f13, []int{12}
}
func (m *EventCompleteUnBondingMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventCompleteUnBondingMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventCompleteUnBondingMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventCompleteUnBondingMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCompleteUnBondingMetaNode.Merge(m, src)
}
func (m *EventCompleteUnBondingMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *EventCompleteUnBondingMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCompleteUnBondingMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_EventCompleteUnBondingMetaNode proto.InternalMessageInfo

func (m *EventCompleteUnBondingMetaNode) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *EventCompleteUnBondingMetaNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*EventCreateResourceNode)(nil), "stratos.register.v1.EventCreateResourceNode")
	proto.RegisterType((*EventCreateMetaNode)(nil), "stratos.register.v1.EventCreateMetaNode")
	proto.RegisterType((*EventUnBondingResourceNode)(nil), "stratos.register.v1.EventUnBondingResourceNode")
	proto.RegisterType((*EventUnBondingMetaNode)(nil), "stratos.register.v1.EventUnBondingMetaNode")
	proto.RegisterType((*EventMetaNodeRegistrationVote)(nil), "stratos.register.v1.EventMetaNodeRegistrationVote")
	proto.RegisterType((*EventKickMetaNodeVote)(nil), "stratos.register.v1.EventKickMetaNodeVote")
	proto.RegisterType((*EventUpdateResourceNode)(nil), "stratos.register.v1.EventUpdateResourceNode")
	proto.RegisterType((*EventUpdateResourceNodeDeposit)(nil), "stratos.register.v1.EventUpdateResourceNodeDeposit")
	proto.RegisterType((*EventUpdateEffectiveDeposit)(nil), "stratos.register.v1.EventUpdateEffectiveDeposit")
	proto.RegisterType((*EventUpdateMetaNode)(nil), "stratos.register.v1.EventUpdateMetaNode")
	proto.RegisterType((*EventUpdateMetaNodeDeposit)(nil), "stratos.register.v1.EventUpdateMetaNodeDeposit")
	proto.RegisterType((*EventCompleteUnBondingResourceNode)(nil), "stratos.register.v1.EventCompleteUnBondingResourceNode")
	proto.RegisterType((*EventCompleteUnBondingMetaNode)(nil), "stratos.register.v1.EventCompleteUnBondingMetaNode")
}

func init() { proto.RegisterFile("stratos/register/v1/event.proto", fileDescriptor_9f4bedab5b811f13) }

var fileDescriptor_9f4bedab5b811f13 = []byte{
	// 777 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x3b, 0x6f, 0x13, 0x4b,
	0x14, 0xce, 0x3a, 0x8f, 0x9b, 0x8c, 0xe2, 0xe4, 0xc6, 0x8e, 0x1d, 0xdf, 0x1b, 0x5d, 0x5f, 0xe4,
	0x08, 0xf1, 0x90, 0xb0, 0x95, 0x10, 0x51, 0xd0, 0xe5, 0x55, 0x41, 0x52, 0x98, 0x24, 0x05, 0xcd,
	0x6a, 0xbc, 0x7b, 0xec, 0x8c, 0xec, 0x9d, 0xb1, 0x66, 0xce, 0x1a, 0x42, 0x49, 0x4b, 0xc3, 0x9f,
	0xe0, 0x47, 0xd0, 0x50, 0x23, 0xd1, 0xa4, 0xa4, 0x41, 0x42, 0xc9, 0xaf, 0xa0, 0x40, 0x42, 0xbb,
	0x33, 0xb3, 0xb1, 0x1d, 0xaf, 0x08, 0x8a, 0x45, 0x45, 0xb7, 0x7b, 0xbe, 0x73, 0xce, 0x9c, 0xef,
	0x3b, 0x67, 0x1e, 0xe4, 0x7f, 0x85, 0x92, 0xa2, 0x50, 0x35, 0x09, 0x2d, 0xa6, 0x10, 0x64, 0xad,
	0xb7, 0x5e, 0x83, 0x1e, 0x70, 0xac, 0x76, 0xa5, 0x40, 0x91, 0xcb, 0x1b, 0x87, 0xaa, 0x75, 0xa8,
	0xf6, 0xd6, 0x2b, 0x9f, 0x1c, 0xb2, 0xb2, 0x17, 0x39, 0xed, 0x48, 0xa0, 0x08, 0x75, 0x50, 0x22,
	0x94, 0x1e, 0x1c, 0x08, 0x1f, 0x72, 0x45, 0x32, 0xa3, 0x80, 0xfb, 0x20, 0x4b, 0xce, 0x2d, 0xe7,
	0xee, 0x5c, 0xdd, 0xfc, 0xe5, 0xee, 0x90, 0x45, 0x0e, 0xf8, 0x42, 0xc8, 0xb6, 0x4b, 0x7d, 0x5f,
	0x82, 0x52, 0xa5, 0x4c, 0xec, 0xb0, 0x60, 0xcc, 0x5b, 0xda, 0x1a, 0x25, 0xe8, 0x86, 0x8d, 0x36,
	0x9c, 0x96, 0x26, 0x75, 0x02, 0xfd, 0x97, 0xab, 0x92, 0xbc, 0x78, 0x25, 0x38, 0xb8, 0x1d, 0x16,
	0x30, 0x74, 0xbd, 0x13, 0xca, 0x5b, 0xa0, 0x4a, 0x53, 0xb1, 0xd3, 0x52, 0x0c, 0x3d, 0x8d, 0x90,
	0x1d, 0x0d, 0x44, 0x0b, 0x32, 0xce, 0x90, 0xd1, 0x8e, 0xeb, 0x43, 0x57, 0x28, 0x86, 0xa5, 0x69,
	0xbd, 0xa0, 0x31, 0xef, 0x6a, 0x6b, 0xe5, 0x98, 0xe4, 0xfb, 0xc8, 0xec, 0x03, 0xd2, 0xb1, 0x10,
	0xa9, 0xbc, 0x77, 0xc8, 0xbf, 0x71, 0xe2, 0x23, 0xbe, 0x2d, 0xb8, 0xcf, 0x78, 0xeb, 0x5a, 0x42,
	0xad, 0x91, 0xac, 0x34, 0x7e, 0x2e, 0x17, 0x3e, 0x98, 0xec, 0xf3, 0xb2, 0x3f, 0xf8, 0x3e, 0x59,
	0x32, 0xa4, 0x5c, 0x14, 0xae, 0x84, 0x40, 0xf4, 0xc0, 0xe8, 0xb5, 0x68, 0x80, 0x43, 0x51, 0x8f,
	0xcd, 0xb9, 0x0d, 0x52, 0x08, 0x79, 0x43, 0x57, 0xe0, 0x06, 0x14, 0x43, 0x09, 0x2e, 0xb2, 0x00,
	0x8c, 0x74, 0xf9, 0x04, 0xdc, 0x8f, 0xb1, 0x43, 0x16, 0x40, 0xe5, 0x8b, 0x43, 0x8a, 0x83, 0xb5,
	0xff, 0x54, 0x97, 0x55, 0x32, 0x17, 0x00, 0xd2, 0xfe, 0x9a, 0x67, 0x03, 0x1b, 0x94, 0xd2, 0xbc,
	0xc9, 0xb4, 0xe6, 0x8d, 0xe4, 0x37, 0xf5, 0x8b, 0xfc, 0xa6, 0xd3, 0xf9, 0xbd, 0xce, 0x90, 0xff,
	0x62, 0x7e, 0x96, 0x56, 0x3d, 0x1e, 0x6f, 0x49, 0x91, 0x09, 0x7e, 0x2c, 0x30, 0x9d, 0xe6, 0x06,
	0x29, 0xf4, 0x04, 0x82, 0x74, 0x47, 0x0f, 0x41, 0x3e, 0x06, 0x0f, 0x06, 0x47, 0xfa, 0x31, 0xf9,
	0xc7, 0xa3, 0xdc, 0x67, 0x3e, 0x45, 0xb8, 0x12, 0xa7, 0x35, 0x58, 0x49, 0x1c, 0x86, 0x62, 0xef,
	0x91, 0xbf, 0x2f, 0x63, 0x15, 0x52, 0x0c, 0xed, 0xcc, 0x2f, 0x26, 0xf6, 0x67, 0xb1, 0x39, 0x4d,
	0xe4, 0xe9, 0x14, 0x91, 0x2b, 0x1f, 0x1c, 0x52, 0x88, 0x45, 0x78, 0xc2, 0xbc, 0xb6, 0x15, 0x62,
	0xec, 0xe4, 0x37, 0x49, 0x11, 0xa9, 0x6c, 0x01, 0xa6, 0x30, 0x5f, 0xd6, 0xe8, 0x50, 0xd4, 0x1a,
	0xc9, 0x9a, 0xa8, 0x01, 0xce, 0xf3, 0xda, 0xa8, 0x09, 0x57, 0xde, 0xd8, 0x73, 0xe8, 0xa8, 0xeb,
	0x8f, 0xfd, 0x1c, 0xaa, 0x91, 0x7c, 0x03, 0x38, 0x34, 0x99, 0xc7, 0xa8, 0x3c, 0x1d, 0x2a, 0x3a,
	0xd7, 0x07, 0xd9, 0xfd, 0xfe, 0x3d, 0x43, 0xca, 0x29, 0xd5, 0x98, 0xa3, 0xe6, 0xe6, 0x45, 0xad,
	0x91, 0xac, 0xdd, 0x17, 0x3e, 0x74, 0x90, 0x9a, 0x72, 0xe6, 0x8d, 0x71, 0x37, 0xb2, 0x45, 0xd9,
	0xbc, 0x50, 0x4a, 0xe0, 0x98, 0x9c, 0x7c, 0x5a, 0xbd, 0x05, 0x63, 0xb6, 0xe5, 0x6c, 0x92, 0x22,
	0xed, 0x51, 0xd6, 0xa1, 0x8d, 0x0e, 0xb8, 0x28, 0xda, 0xc0, 0xdd, 0x06, 0x34, 0x85, 0xb4, 0x5b,
	0x67, 0x39, 0x41, 0x0f, 0x23, 0x70, 0x3b, 0xc6, 0xa2, 0x21, 0x18, 0x8e, 0xa2, 0x4d, 0x04, 0x59,
	0x9a, 0xd1, 0x43, 0x30, 0x18, 0xb4, 0x15, 0x41, 0x69, 0xa3, 0xf9, 0x57, 0xda, 0xfe, 0x4f, 0xdd,
	0xd3, 0xb3, 0xe9, 0x7b, 0xfa, 0x9d, 0x43, 0x56, 0xfb, 0xf4, 0xdf, 0x6b, 0x36, 0xc1, 0x43, 0xd6,
	0x4b, 0xc4, 0x1f, 0x21, 0xb2, 0x33, 0x52, 0xe4, 0x47, 0x64, 0x05, 0x6c, 0xb0, 0x55, 0xd0, 0x50,
	0xd4, 0x5d, 0x29, 0xc0, 0x50, 0x6e, 0x4d, 0xf2, 0x36, 0x59, 0x60, 0xca, 0x0d, 0xb9, 0x0a, 0x55,
	0x37, 0xea, 0xab, 0x6f, 0xba, 0x93, 0x65, 0xea, 0xe8, 0xd2, 0x98, 0xdc, 0x37, 0xba, 0xcc, 0xf1,
	0xdd, 0x37, 0xdf, 0x32, 0xf6, 0xbe, 0x19, 0x48, 0xfc, 0x67, 0xf6, 0x7e, 0xc3, 0xec, 0x01, 0xa9,
	0xe8, 0x37, 0x84, 0x08, 0xba, 0x1d, 0x40, 0x48, 0xbd, 0xf2, 0x69, 0x20, 0x42, 0x8e, 0xb6, 0x05,
	0xfa, 0xef, 0xfa, 0x2d, 0xa6, 0xe6, 0x84, 0xb9, 0xb2, 0x4c, 0xff, 0x14, 0xdd, 0x68, 0x89, 0xed,
	0x83, 0x8f, 0xe7, 0x65, 0xe7, 0xec, 0xbc, 0xec, 0x7c, 0x3d, 0x2f, 0x3b, 0x6f, 0x2f, 0xca, 0x13,
	0x67, 0x17, 0xe5, 0x89, 0xcf, 0x17, 0xe5, 0x89, 0xe7, 0x9b, 0x2d, 0x86, 0x27, 0x61, 0xa3, 0xea,
	0x89, 0xa0, 0x66, 0x5e, 0x85, 0x1c, 0xd0, 0x7e, 0x3e, 0xf0, 0x4e, 0x28, 0xe3, 0xb5, 0x97, 0x97,
	0x2f, 0x49, 0x3c, 0xed, 0x82, 0x6a, 0xcc, 0xc4, 0xef, 0xc8, 0x87, 0x3f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x4d, 0x39, 0xbb, 0x40, 0x6a, 0x0a, 0x00, 0x00,
}

func (m *EventCreateResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventCreateResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventCreateResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InitialDeposit) > 0 {
		i -= len(m.InitialDeposit)
		copy(dAtA[i:], m.InitialDeposit)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.InitialDeposit)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OzoneLimitChanges) > 0 {
		i -= len(m.OzoneLimitChanges)
		copy(dAtA[i:], m.OzoneLimitChanges)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OzoneLimitChanges)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Pubkey) > 0 {
		i -= len(m.Pubkey)
		copy(dAtA[i:], m.Pubkey)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Pubkey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventCreateMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventCreateMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventCreateMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUnBondingResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUnBondingResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUnBondingResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UnbondingMatureTime) > 0 {
		i -= len(m.UnbondingMatureTime)
		copy(dAtA[i:], m.UnbondingMatureTime)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.UnbondingMatureTime)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DepositToRemove) > 0 {
		i -= len(m.DepositToRemove)
		copy(dAtA[i:], m.DepositToRemove)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.DepositToRemove)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceNode) > 0 {
		i -= len(m.ResourceNode)
		copy(dAtA[i:], m.ResourceNode)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.ResourceNode)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUnBondingMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUnBondingMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUnBondingMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UnbondingMatureTime) > 0 {
		i -= len(m.UnbondingMatureTime)
		copy(dAtA[i:], m.UnbondingMatureTime)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.UnbondingMatureTime)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DepositToRemove) > 0 {
		i -= len(m.DepositToRemove)
		copy(dAtA[i:], m.DepositToRemove)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.DepositToRemove)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OzoneLimitChanges) > 0 {
		i -= len(m.OzoneLimitChanges)
		copy(dAtA[i:], m.OzoneLimitChanges)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OzoneLimitChanges)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MetaNode) > 0 {
		i -= len(m.MetaNode)
		copy(dAtA[i:], m.MetaNode)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.MetaNode)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventMetaNodeRegistrationVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventMetaNodeRegistrationVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventMetaNodeRegistrationVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OzoneLimitChanges) > 0 {
		i -= len(m.OzoneLimitChanges)
		copy(dAtA[i:], m.OzoneLimitChanges)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OzoneLimitChanges)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CandidateStatus) > 0 {
		i -= len(m.CandidateStatus)
		copy(dAtA[i:], m.CandidateStatus)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.CandidateStatus)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CandidateNetworkAddress) > 0 {
		i -= len(m.CandidateNetworkAddress)
		copy(dAtA[i:], m.CandidateNetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.CandidateNetworkAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.VoterNetworkAddress) > 0 {
		i -= len(m.VoterNetworkAddress)
		copy(dAtA[i:], m.VoterNetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.VoterNetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventKickMetaNodeVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventKickMetaNodeVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventKickMetaNodeVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TargetStatus) > 0 {
		i -= len(m.TargetStatus)
		copy(dAtA[i:], m.TargetStatus)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.TargetStatus)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TargetNetworkAddress) > 0 {
		i -= len(m.TargetNetworkAddress)
		copy(dAtA[i:], m.TargetNetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.TargetNetworkAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.VoterNetworkAddress) > 0 {
		i -= len(m.VoterNetworkAddress)
		copy(dAtA[i:], m.VoterNetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.VoterNetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUpdateResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUpdateResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUpdateResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BeneficiaryAddress) > 0 {
		i -= len(m.BeneficiaryAddress)
		copy(dAtA[i:], m.BeneficiaryAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.BeneficiaryAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUpdateResourceNodeDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUpdateResourceNodeDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUpdateResourceNodeDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UnbondingMatureTime) > 0 {
		i -= len(m.UnbondingMatureTime)
		copy(dAtA[i:], m.UnbondingMatureTime)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.UnbondingMatureTime)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.OzoneLimitChanges) > 0 {
		i -= len(m.OzoneLimitChanges)
		copy(dAtA[i:], m.OzoneLimitChanges)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OzoneLimitChanges)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AvailableTokenAfter) > 0 {
		i -= len(m.AvailableTokenAfter)
		copy(dAtA[i:], m.AvailableTokenAfter)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.AvailableTokenAfter)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AvailableTokenBefore) > 0 {
		i -= len(m.AvailableTokenBefore)
		copy(dAtA[i:], m.AvailableTokenBefore)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.AvailableTokenBefore)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CurrentDeposit) > 0 {
		i -= len(m.CurrentDeposit)
		copy(dAtA[i:], m.CurrentDeposit)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.CurrentDeposit)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DepositDelta) > 0 {
		i -= len(m.DepositDelta)
		copy(dAtA[i:], m.DepositDelta)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.DepositDelta)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUpdateEffectiveDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUpdateEffectiveDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUpdateEffectiveDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.IsUnsuspended) > 0 {
		i -= len(m.IsUnsuspended)
		copy(dAtA[i:], m.IsUnsuspended)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.IsUnsuspended)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EffectiveDepositAfter) > 0 {
		i -= len(m.EffectiveDepositAfter)
		copy(dAtA[i:], m.EffectiveDepositAfter)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.EffectiveDepositAfter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUpdateMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUpdateMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUpdateMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventUpdateMetaNodeDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventUpdateMetaNodeDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventUpdateMetaNodeDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UnbondingMatureTime) > 0 {
		i -= len(m.UnbondingMatureTime)
		copy(dAtA[i:], m.UnbondingMatureTime)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.UnbondingMatureTime)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.OzoneLimitChanges) > 0 {
		i -= len(m.OzoneLimitChanges)
		copy(dAtA[i:], m.OzoneLimitChanges)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.OzoneLimitChanges)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AvailableTokenAfter) > 0 {
		i -= len(m.AvailableTokenAfter)
		copy(dAtA[i:], m.AvailableTokenAfter)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.AvailableTokenAfter)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AvailableTokenBefore) > 0 {
		i -= len(m.AvailableTokenBefore)
		copy(dAtA[i:], m.AvailableTokenBefore)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.AvailableTokenBefore)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CurrentDeposit) > 0 {
		i -= len(m.CurrentDeposit)
		copy(dAtA[i:], m.CurrentDeposit)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.CurrentDeposit)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DepositDelta) > 0 {
		i -= len(m.DepositDelta)
		copy(dAtA[i:], m.DepositDelta)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.DepositDelta)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventCompleteUnBondingResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventCompleteUnBondingResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventCompleteUnBondingResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EventCompleteUnBondingMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventCompleteUnBondingMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventCompleteUnBondingMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintEvent(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintEvent(dAtA []byte, offset int, v uint64) int {
	offset -= sovEvent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EventCreateResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.Pubkey)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.OzoneLimitChanges)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.InitialDeposit)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventCreateMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUnBondingResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.ResourceNode)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.DepositToRemove)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.UnbondingMatureTime)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUnBondingMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.MetaNode)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.OzoneLimitChanges)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.DepositToRemove)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.UnbondingMatureTime)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventMetaNodeRegistrationVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.VoterNetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.CandidateNetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.CandidateStatus)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.OzoneLimitChanges)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventKickMetaNodeVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.VoterNetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.TargetNetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.TargetStatus)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUpdateResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.BeneficiaryAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUpdateResourceNodeDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.DepositDelta)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.CurrentDeposit)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.AvailableTokenBefore)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.AvailableTokenAfter)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.OzoneLimitChanges)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.UnbondingMatureTime)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUpdateEffectiveDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.EffectiveDepositAfter)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.IsUnsuspended)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUpdateMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventUpdateMetaNodeDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.DepositDelta)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.CurrentDeposit)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.AvailableTokenBefore)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.AvailableTokenAfter)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.OzoneLimitChanges)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.UnbondingMatureTime)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventCompleteUnBondingResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func (m *EventCompleteUnBondingMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovEvent(uint64(l))
	}
	return n
}

func sovEvent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEvent(x uint64) (n int) {
	return sovEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EventCreateResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventCreateResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventCreateResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pubkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OzoneLimitChanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OzoneLimitChanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialDeposit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitialDeposit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventCreateMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventCreateMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventCreateMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUnBondingResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUnBondingResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUnBondingResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceNode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceNode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositToRemove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositToRemove = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingMatureTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnbondingMatureTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUnBondingMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUnBondingMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUnBondingMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaNode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaNode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OzoneLimitChanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OzoneLimitChanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositToRemove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositToRemove = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingMatureTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnbondingMatureTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventMetaNodeRegistrationVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventMetaNodeRegistrationVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventMetaNodeRegistrationVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterNetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterNetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateNetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidateNetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidateStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OzoneLimitChanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OzoneLimitChanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventKickMetaNodeVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventKickMetaNodeVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventKickMetaNodeVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterNetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterNetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetNetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetNetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUpdateResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUpdateResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUpdateResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeneficiaryAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BeneficiaryAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUpdateResourceNodeDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUpdateResourceNodeDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUpdateResourceNodeDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositDelta", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositDelta = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentDeposit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentDeposit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableTokenBefore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableTokenBefore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableTokenAfter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableTokenAfter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OzoneLimitChanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OzoneLimitChanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingMatureTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnbondingMatureTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUpdateEffectiveDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUpdateEffectiveDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUpdateEffectiveDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveDepositAfter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EffectiveDepositAfter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsUnsuspended", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsUnsuspended = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUpdateMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUpdateMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUpdateMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventUpdateMetaNodeDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventUpdateMetaNodeDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventUpdateMetaNodeDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositDelta", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositDelta = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentDeposit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentDeposit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableTokenBefore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableTokenBefore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableTokenAfter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableTokenAfter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OzoneLimitChanges", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OzoneLimitChanges = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingMatureTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnbondingMatureTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventCompleteUnBondingResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventCompleteUnBondingResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventCompleteUnBondingResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EventCompleteUnBondingMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventCompleteUnBondingMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventCompleteUnBondingMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEvent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEvent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEvent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEvent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEvent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEvent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEvent = fmt.Errorf("proto: unexpected end of group")
)
