syntax = "proto3";
package stratos.sds.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/stratosnet/stratos-chain/x/sds/types";

// Msg defines the sds module Msg service.
service Msg {
  // CreateResourceNode defines a method for creating a new resource node.
  rpc HandleMsgFileUpload(MsgFileUpload) returns (MsgFileUploadResponse) {
    option (google.api.http).post = "/stratos/sds/v1/file_upload";
  };
  rpc HandleMsgPrepay(MsgPrepay) returns (MsgPrepayResponse) {
    option (google.api.http).post = "/stratos/sds/v1/prepay";
  };
}

message MsgFileUpload {
  string           file_hash = 1 [
    (gogoproto.jsontag) = "file_hash",
    (gogoproto.moretags) = "yaml:\"file_hash\""
  ];
  string          from = 2 [
    (gogoproto.jsontag) = "from",
    (gogoproto.moretags) = "yaml:\"from\""
  ];
  string          reporter = 3 [
    (gogoproto.jsontag) = "reporter",
    (gogoproto.moretags) = "yaml:\"reporter\""
  ];
  string          uploader = 4 [
    (gogoproto.jsontag) = "uploader",
    (gogoproto.moretags) = "yaml:\"uploader\""
  ];
}

message MsgFileUploadResponse {}

message MsgPrepay {
  string                                sender = 1 [
    (gogoproto.jsontag) = "sender",
    (gogoproto.moretags) = "yaml:\"sender\""
  ];
  string                                beneficiary = 2 [
    (gogoproto.jsontag) = "beneficiary",
    (gogoproto.moretags) = "yaml:\"beneficiary\""
  ];
  repeated cosmos.base.v1beta1.Coin     amount = 3 [
    (gogoproto.jsontag) = "amount",
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgPrepayResponse {}