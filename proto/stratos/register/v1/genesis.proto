syntax = "proto3";
package stratos.register.v1;

import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "stratos/register/v1/register.proto";

option go_package = "github.com/stratosnet/stratos-chain/x/register/types";

// GenesisState defines the register module's genesis state.
message GenesisState {
  Params                  params = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "params",
    (gogoproto.moretags) = "yaml:\"params\""
  ];
  repeated ResourceNode   resource_nodes = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "resource_nodes",
    (gogoproto.moretags) = "yaml:\"resource_nodes\"",
    (gogoproto.castrepeated) = "ResourceNodes"
  ];
  repeated MetaNode       meta_nodes = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "meta_nodes",
    (gogoproto.moretags) = "yaml:\"meta_nodes\"",
    (gogoproto.castrepeated) = "MetaNodes"
  ];
  string                  remaining_noz_limit = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "remaining_noz_limit",
    (gogoproto.moretags) = "yaml:\"remaining_noz_limit\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ]; // remaining noz limit
  repeated Slashing       slashing = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "slashing",
    (gogoproto.moretags) = "yaml:\"slashing_info\""
  ];
  string                  deposit_noz_rate = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "deposit_noz_rate",
    (gogoproto.moretags) = "yaml:\"deposit_noz_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ]; //fixed rate of deposit over noz
}

message GenesisMetaNode {
  string                              network_address = 1 [
    (gogoproto.jsontag) = "network_address",
    (gogoproto.moretags) = "yaml:\"network_address\""
  ]; // network address of the meta node
  google.protobuf.Any                 pubkey = 2 [
    (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey",
    (gogoproto.jsontag) = "pubkey",
    (gogoproto.moretags) = "yaml:\"pubkey\""
  ]; // the consensus public key of the meta node; bech encoded in JSON
  bool                                suspend = 3 [
    (gogoproto.jsontag) = "suspend",
    (gogoproto.moretags) = "yaml:\"suspend\""
  ];  // has the meta node been suspended from bonded status?
  cosmos.staking.v1beta1.BondStatus   status = 4 [
    (gogoproto.jsontag) = "status",
    (gogoproto.moretags) = "yaml:\"status\""
  ];   // meta node status (Unspecified/Bonded/Unbonding/Unbonded)
  string                              tokens = 5 [
    (gogoproto.jsontag) = "tokens",
    (gogoproto.moretags) = "yaml:\"tokens\""
  ]; // delegated tokens
  string                              owner_address = 6 [
    (gogoproto.jsontag) = "owner_address",
    (gogoproto.moretags) = "yaml:\"owner_address\""
  ]; // owner address of the meta node
  Description                         description = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "description",
    (gogoproto.moretags) = "yaml:\"description\""
  ];  // description terms for the meta node
}

message Slashing {
  string  wallet_address = 1 [
    (gogoproto.jsontag) = "wallet_address",
    (gogoproto.moretags) = "yaml:\"wallet_address\""
  ];
  int64   value = 2 [
    (gogoproto.jsontag) = "value",
    (gogoproto.moretags) = "yaml:\"value\""
  ];
}
