syntax = "proto3";
package stratos.register.v1_1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/any.proto";
import "stratos/register/v1_1/register.proto";

option (gogoproto.equal_all) = true;
option go_package = "github.com/stratosnet/stratos-chain/x/register/types/v1_1";

// MsgCreateResourceNode encapsulates an MsgCreateResourceNodeTx transaction as an SDK message.
message MsgCreateResourceNode {
  option (cosmos.msg.v1.signer) = "owner_address";
  option (amino.name) = "stratos/MsgCreateResourceNode";

  string                        network_address = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "network_address",
    (gogoproto.moretags) = "yaml:\"network_address\""
  ];
  google.protobuf.Any           pubkey = 2 [
    (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey",
    (gogoproto.jsontag) = "pubkey",
    (gogoproto.moretags) = "yaml:\"pubkey\""
  ];
  cosmos.base.v1beta1.Coin      value = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.jsontag) = "value",
    (gogoproto.moretags) = "yaml:\"value\""
  ];
  string                        owner_address = 4 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "owner_address",
    (gogoproto.moretags) = "yaml:\"owner_address\""
  ];
  Description                   description = 5 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.jsontag) = "description",
    (gogoproto.moretags) = "yaml:\"description\""
  ];
  uint32                        node_type = 6 [
    (gogoproto.jsontag) = "node_type",
    (gogoproto.moretags) = "yaml:\"node_type\""
  ];
  string                        beneficiary_address = 7 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "beneficiary_address",
    (gogoproto.moretags) = "yaml:\"beneficiary_address\""
  ];
}

// MsgCreateMetaNode encapsulates an MsgCreateMetaNodeTx transaction as an SDK message.
message MsgCreateMetaNode {
  option (cosmos.msg.v1.signer) = "owner_address";
  option (amino.name) = "stratos/MsgCreateMetaNode";

  string                        network_address = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "network_address",
    (gogoproto.moretags) = "yaml:\"network_address\""
  ];
  google.protobuf.Any           pubkey = 2 [
    (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey",
    (gogoproto.jsontag) = "pubkey",
    (gogoproto.moretags) = "yaml:\"pubkey\""
  ];
  cosmos.base.v1beta1.Coin      value = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.jsontag) = "value",
    (gogoproto.moretags) = "yaml:\"value\""
  ];
  string                        owner_address = 4 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "owner_address",
    (gogoproto.moretags) = "yaml:\"owner_address\""
  ];
  Description                   description = 5 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.jsontag) = "description",
    (gogoproto.moretags) = "yaml:\"description\""
  ];
  string                        beneficiary_address = 6 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "beneficiary_address",
    (gogoproto.moretags) = "yaml:\"beneficiary_address\""
  ];
}

// MsgUpdateResourceNode defines a SDK message for updating an existing resource node.
message MsgUpdateResourceNode {
  option (cosmos.msg.v1.signer) = "owner_address";
  option (amino.name) = "stratos/MsgUpdateResourceNode";

  Description description = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.jsontag) = "description",
    (gogoproto.moretags) = "yaml:\"description\""
  ];
  string      network_address = 2 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "network_address",
    (gogoproto.moretags) = "yaml:\"network_address\""
  ];
  string      owner_address = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "owner_address",
    (gogoproto.moretags) = "yaml:\"owner_address\""
  ];
  uint32      node_type = 4 [
    (gogoproto.jsontag) = "node_type",
    (gogoproto.moretags) = "yaml:\"node_type\""
  ];
  string      beneficiary_address = 5 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "beneficiary_address",
    (gogoproto.moretags) = "yaml:\"beneficiary_address\""
  ];
}

// MsgUpdateMetaNode defines a SDK message for updating an existing meta node.
message MsgUpdateMetaNode {
  option (cosmos.msg.v1.signer) = "owner_address";
  option (amino.name) = "stratos/MsgUpdateMetaNode";

  Description description = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.jsontag) = "description",
    (gogoproto.moretags) = "yaml:\"description\""
  ];
  string      network_address = 2 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "network_address",
    (gogoproto.moretags) = "yaml:\"network_address\""
  ];
  string      owner_address = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "owner_address",
    (gogoproto.moretags) = "yaml:\"owner_address\""
  ];
  string      beneficiary_address = 4 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag) = "beneficiary_address",
    (gogoproto.moretags) = "yaml:\"beneficiary_address\""
  ];
}

