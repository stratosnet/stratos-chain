syntax = "proto3";
package stratos.pot.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/stratosnet/stratos-chain/x/pot/types";

// Params defines the PoT module parameters
message Params {
  string                      bond_denom = 1 [
    (gogoproto.jsontag) = "bond_denom",
    (gogoproto.moretags) = "yaml:\"bond_denom\""
  ];
  string                      reward_denom = 2 [
    (gogoproto.jsontag) = "reward_denom",
    (gogoproto.moretags) = "yaml:\"reward_denom\""
  ];
  int64                       mature_epoch = 3 [
    (gogoproto.jsontag) = "mature_epoch",
    (gogoproto.moretags) = "yaml:\"mature_epoch\""
  ];
  repeated MiningRewardParam  mining_reward_params = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "mining_reward_params",
    (gogoproto.moretags) = "yaml:\"mining_reward_params\""
  ];
  string                      community_tax = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "community_tax",
    (gogoproto.moretags) = "yaml:\"community_tax\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  cosmos.base.v1beta1.Coin    initial_total_supply = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "initial_total_supply",
    (gogoproto.moretags) = "yaml:\"initial_total_supply\""
  ];
}

message MiningRewardParam {
  cosmos.base.v1beta1.Coin  total_mined_valve_start = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "total_mined_valve_start",
    (gogoproto.moretags) = "yaml:\"total_mined_valve_start\""
  ];
  cosmos.base.v1beta1.Coin  total_mined_valve_end = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "total_mined_valve_end",
    (gogoproto.moretags) = "yaml:\"total_mined_valve_end\""
  ];
  cosmos.base.v1beta1.Coin  mining_reward = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "mining_reward",
    (gogoproto.moretags) = "yaml:\"mining_reward\""
  ];
  string                    block_chain_percentage_in_bp = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "block_chain_percentage_in_bp",
    (gogoproto.moretags) = "yaml:\"block_chain_percentage_in_bp\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
  string                    resource_node_percentage_in_bp = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "resource_node_percentage_in_bp",
    (gogoproto.moretags) = "yaml:\"resource_node_percentage_in_bp\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
  string                    meta_node_percentage_in_bp = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "meta_node_percentage_in_bp",
    (gogoproto.moretags) = "yaml:\"meta_node_percentage_in_bp\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
}

message Reward {
  string                              wallet_address = 1 [
    (gogoproto.jsontag) = "wallet_address",
    (gogoproto.moretags) = "yaml:\"wallet_address\""
  ];
  repeated cosmos.base.v1beta1.Coin   reward_from_mining_pool = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "reward_from_mining_pool",
    (gogoproto.moretags) = "yaml:\"reward_from_mining_pool\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin   reward_from_traffic_pool = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "reward_from_traffic_pool",
    (gogoproto.moretags) = "yaml:\"reward_from_traffic_pool\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message SingleWalletVolume {
  string                  wallet_address = 1 [
    (gogoproto.jsontag) = "wallet_address",
    (gogoproto.moretags) = "yaml:\"wallet_address\""
  ];
  string                  volume = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "volume",
    (gogoproto.moretags) = "yaml:\"volume\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];
}

message WalletVolumes {
  repeated SingleWalletVolume   volumes = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "volumes",
    (gogoproto.moretags) = "yaml:\"volumes\""
  ];
}

message VolumeReportRecord {
  string  reporter = 1 [
    (gogoproto.jsontag) = "reporter",
    (gogoproto.moretags) = "yaml:\"reporter\""
  ];
  string  report_reference = 2 [
    (gogoproto.jsontag) = "report_reference",
    (gogoproto.moretags) = "yaml:\"report_reference\""
  ];
  string  tx_hash = 3 [
    (gogoproto.jsontag) = "tx_hash",
    (gogoproto.moretags) = "yaml:\"tx_hash\""
  ];
}
